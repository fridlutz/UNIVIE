/**
 * MappingMapToxsd_gruppe_14_FIXED.java
 *
 * This file was generated by MapForce 2015r3sp1.
 *
 * YOU SHOULD NOT MODIFY THIS FILE, BECAUSE IT WILL BE
 * OVERWRITTEN WHEN YOU RE-RUN CODE GENERATION.
 *
 * Refer to the MapForce Documentation for further details.
 * http://www.altova.com/mapforce
 */
package com.mapforce;
import com.altova.mapforce.*;
import com.altova.types.*;
import com.altova.xml.*;
import java.util.*;

public class MappingMapToxsd_gruppe_14_FIXED extends com.altova.TraceProvider 
{
	private boolean runDoesCloseAll = true;
	public void setCloseObjectsAfterRun(boolean c) {runDoesCloseAll = c;}
	public boolean getCloseObjectsAfterRun() {return runDoesCloseAll;}

	
	static class main implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_instance_convertedXSDSchema_FIXED;
	
		public main(com.altova.mapforce.IMFNode var1_instance_convertedXSDSchema_FIXED)
		{
			this.var1_instance_convertedXSDSchema_FIXED = var1_instance_convertedXSDSchema_FIXED;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 2;
			Object current;
			main closure;
			javax.xml.namespace.QName var2_create_qname;
			com.altova.mapforce.IEnumerable var3_studies;
			public Enumerator(main closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 2:	if (moveNext_2()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_2() throws Exception {
				state = 0;				
				var2_create_qname = com.altova.functions.Core.createQName("studies", "http://www.univie.ac.at/Interop");
				var3_studies = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(var2_create_qname, closure.var1_instance_convertedXSDSchema_FIXED));
				current = com.altova.functions.Core.createElement(var2_create_qname, (new seq1_join(var3_studies)));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq1_join implements IEnumerable
	{
		com.altova.mapforce.IEnumerable var1_studies;
	
		public seq1_join(com.altova.mapforce.IEnumerable var1_studies)
		{
			this.var1_studies = var1_studies;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq1_join closure;
			IEnumerator var2_study;
			public Enumerator(seq1_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createAttribute(com.altova.functions.Core.createQName("xsi:schemaLocation", "http://www.w3.org/2001/XMLSchema-instance"), com.altova.functions.Core.box("http://www.univie.ac.at/Interop Z:/INTERROP/SESS~6B2/4SCH~A4D/xsd_gruppe_14_FIXED.xsd"));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!(com.altova.functions.Core.exists(closure.var1_studies))) {state = 0; return false; }
				var2_study = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("study", "http://www.univie.ac.at/Interop"), (com.altova.mapforce.IMFNode)com.altova.functions.Core.first(closure.var1_studies))).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 4;				
				if (!var2_study.moveNext()) {state = 5; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("module", "http://www.univie.ac.at/Interop"), (new seq2_join(((com.altova.mapforce.IMFNode)(var2_study.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 0;				
				var2_study.close(); var2_study = null;
				return false;
			}

			
			public void close()
			{
				try
				{
				var2_study.close(); var2_study = null;
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq2_join implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
	
		public seq2_join(com.altova.mapforce.IMFNode var1_current)
		{
			this.var1_current = var1_current;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq2_join closure;
			IEnumerator var2_course;
			public Enumerator(seq2_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("name", "http://www.univie.ac.at/Interop"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("name", ""), closure.var1_current)))));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("id", "http://www.univie.ac.at/Interop"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("id", ""), closure.var1_current)))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 4;				
				var2_course = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("course", "http://www.univie.ac.at/Interop"), closure.var1_current)).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 4;				
				if (!var2_course.moveNext()) {state = 5; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("course", "http://www.univie.ac.at/Interop"), (new seq3_join(((com.altova.mapforce.IMFNode)(var2_course.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 0;				
				var2_course.close(); var2_course = null;
				return false;
			}

			
			public void close()
			{
				try
				{
				var2_course.close(); var2_course = null;
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq3_join implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
	
		public seq3_join(com.altova.mapforce.IMFNode var1_current)
		{
			this.var1_current = var1_current;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq3_join closure;
			IEnumerator var2_group;
			public Enumerator(seq3_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 9:	if (moveNext_9()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("title", "http://www.univie.ac.at/Interop"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("title", ""), closure.var1_current)))));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("study_programme", "http://www.univie.ac.at/Interop"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("responsible_unit", ""), closure.var1_current)))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 4;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("type", "http://www.univie.ac.at/Interop"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("type", ""), closure.var1_current)))));
				pos++;
				return true;
			}
			private boolean moveNext_4() throws Exception {
				state = 5;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("id", "http://www.univie.ac.at/Interop"), com.altova.functions.Core.box(com.altova.CoreTypes.integerToString(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.intToLong(com.altova.CoreTypes.longToInt(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("id", ""), closure.var1_current))))))))))));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 6;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("immanent", "http://www.univie.ac.at/Interop"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("continousassessment", ""), closure.var1_current)))));
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 7;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("ects", "http://www.univie.ac.at/Interop"), com.altova.functions.Core.box(com.altova.CoreTypes.doubleToString(com.altova.CoreTypes.parseDouble(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("ects", ""), closure.var1_current)))))));
				pos++;
				return true;
			}
			private boolean moveNext_7() throws Exception {
				state = 8;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("comment", "http://www.univie.ac.at/Interop"), com.altova.functions.Core.box("NA"));
				pos++;
				return true;
			}
			private boolean moveNext_8() throws Exception {
				state = 9;				
				var2_group = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("group", "http://www.univie.ac.at/Interop"), closure.var1_current)).enumerator();
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 9;				
				if (!var2_group.moveNext()) {state = 10; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("group", "http://www.univie.ac.at/Interop"), (new seq4_join(closure.var1_current, ((com.altova.mapforce.IMFNode)(var2_group.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_10() throws Exception {
				state = 0;				
				var2_group.close(); var2_group = null;
				return false;
			}

			
			public void close()
			{
				try
				{
				var2_group.close(); var2_group = null;
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq4_join implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
		com.altova.mapforce.IMFNode var2_current;
	
		public seq4_join(com.altova.mapforce.IMFNode var1_current, com.altova.mapforce.IMFNode var2_current)
		{
			this.var1_current = var1_current;
			this.var2_current = var2_current;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq4_join closure;
			IEnumerator var3_lecturer;
			IEnumerator var4_lecturer;
			IEnumerator var5_appointment;
			public Enumerator(seq4_join closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
					case 7:	if (moveNext_7()) return true; break;
					case 8:	if (moveNext_8()) return true; break;
					case 10:	if (moveNext_10()) return true; break;
					case 11:	if (moveNext_11()) return true; break;
					case 13:	if (moveNext_13()) return true; break;
					case 14:	if (moveNext_14()) return true; break;
					case 15:	if (moveNext_15()) return true; break;
					case 16:	if (moveNext_16()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("id", "http://www.univie.ac.at/Interop"), com.altova.functions.Core.box(com.altova.CoreTypes.integerToString(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.intToLong(com.altova.CoreTypes.longToInt(com.altova.CoreTypes.integerToLong(com.altova.CoreTypes.decimalToInteger(com.altova.CoreTypes.parseDecimal(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("id", ""), closure.var1_current))))))))))));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("livestream", "http://www.univie.ac.at/Interop"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("livestream", ""), closure.var2_current)))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 4;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("sign_language", "http://www.univie.ac.at/Interop"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("signlanguage", ""), closure.var2_current)))));
				pos++;
				return true;
			}
			private boolean moveNext_4() throws Exception {
				state = 5;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("block", "http://www.univie.ac.at/Interop"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("block", ""), closure.var2_current)))));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 6;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("platform_link", "http://www.univie.ac.at/Interop"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("learningplatformurl", ""), closure.var2_current)))));
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 7;				
				var3_lecturer = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("lecturer", "http://www.univie.ac.at/Interop"), closure.var2_current)).enumerator();
				return false;
			}
			private boolean moveNext_7() throws Exception {
				state = 7;				
				if (!var3_lecturer.moveNext()) {state = 8; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("lecturer_first_name", "http://www.univie.ac.at/Interop"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("givenname", ""), ((com.altova.mapforce.IMFNode)(var3_lecturer.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_8() throws Exception {
				state = 10;				
				var3_lecturer.close(); var3_lecturer = null;
				var4_lecturer = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("lecturer", "http://www.univie.ac.at/Interop"), closure.var2_current)).enumerator();
				return false;
			}
			private boolean moveNext_10() throws Exception {
				state = 10;				
				if (!var4_lecturer.moveNext()) {state = 11; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("lecturer_last_name", "http://www.univie.ac.at/Interop"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("name", ""), ((com.altova.mapforce.IMFNode)(var4_lecturer.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_11() throws Exception {
				state = 13;				
				var4_lecturer.close(); var4_lecturer = null;
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("tests", "http://www.univie.ac.at/Interop"), com.altova.functions.Core.box("NA"));
				pos++;
				return true;
			}
			private boolean moveNext_13() throws Exception {
				state = 14;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("exam", "http://www.univie.ac.at/Interop"), com.altova.functions.Core.box("NA"));
				pos++;
				return true;
			}
			private boolean moveNext_14() throws Exception {
				state = 15;				
				var5_appointment = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("appointment", "http://www.univie.ac.at/Interop"), closure.var2_current)).enumerator();
				return false;
			}
			private boolean moveNext_15() throws Exception {
				state = 15;				
				if (!var5_appointment.moveNext()) {state = 16; return false; }
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("group_details", "http://www.univie.ac.at/Interop"), (new seq5_seq_(((com.altova.mapforce.IMFNode)(var5_appointment.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_16() throws Exception {
				state = 0;				
				var5_appointment.close(); var5_appointment = null;
				return false;
			}

			
			public void close()
			{
				try
				{
				var3_lecturer.close(); var3_lecturer = null;
				var4_lecturer.close(); var4_lecturer = null;
				var5_appointment.close(); var5_appointment = null;
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class seq5_seq_ implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_current;
	
		public seq5_seq_(com.altova.mapforce.IMFNode var1_current)
		{
			this.var1_current = var1_current;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			seq5_seq_ closure;
			public Enumerator(seq5_seq_ closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
					case 4:	if (moveNext_4()) return true; break;
					case 5:	if (moveNext_5()) return true; break;
					case 6:	if (moveNext_6()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("date", "http://www.univie.ac.at/Interop"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("date", ""), closure.var1_current)))));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("start_time", "http://www.univie.ac.at/Interop"), com.altova.functions.Core.box(com.altova.CoreTypes.doubleToString(com.altova.CoreTypes.parseDouble(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("start", ""), closure.var1_current)))))));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 4;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("end_time", "http://www.univie.ac.at/Interop"), com.altova.functions.Core.box(com.altova.CoreTypes.doubleToString(com.altova.CoreTypes.parseDouble(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("end", ""), closure.var1_current)))))));
				pos++;
				return true;
			}
			private boolean moveNext_4() throws Exception {
				state = 5;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("room", "http://www.univie.ac.at/Interop"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("room", ""), closure.var1_current)))));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 6;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("city", "http://www.univie.ac.at/Interop"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("city", ""), closure.var1_current)))));
				pos++;
				return true;
			}
			private boolean moveNext_6() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.createElement(com.altova.functions.Core.createQName("street", "http://www.univie.ac.at/Interop"), com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("roomnumber", ""), closure.var1_current)))));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}
	static class Outer implements IEnumerable
	{
		com.altova.mapforce.IMFNode var1_instance_convertedXSDSchema_FIXED;
	
		public Outer(com.altova.mapforce.IMFNode var1_instance_convertedXSDSchema_FIXED)
		{
			this.var1_instance_convertedXSDSchema_FIXED = var1_instance_convertedXSDSchema_FIXED;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 1;
			Object current;
			Outer closure;
			IEnumerator var2_box;
			public Enumerator(Outer closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:	if (moveNext_1()) return true; break;
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_box = ((new main(closure.var1_instance_convertedXSDSchema_FIXED))).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_box.moveNext()) {state = 3; return false; }
				current = var2_box.current();
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				var2_box.close(); var2_box = null;
				return false;
			}

			
			public void close()
			{
				try
				{
				var2_box.close(); var2_box = null;
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}



	// instances
	protected org.w3c.dom.Node varconvertedXSDSchema_FIXED2Instance;

	public void run(String convertedXSDSchema_FIXED2SourceFilename, String xsd_gruppe_14_FIXED2TargetFilename) throws Exception {
		// open source streams
		writeTrace("Loading " + convertedXSDSchema_FIXED2SourceFilename + "...\n");
		com.altova.io.FileInput convertedXSDSchema_FIXED2Source = new com.altova.io.FileInput(convertedXSDSchema_FIXED2SourceFilename);
		// open target stream
		com.altova.io.FileOutput xsd_gruppe_14_FIXED2Target = new com.altova.io.FileOutput(xsd_gruppe_14_FIXED2TargetFilename);

		// run
	
		run(convertedXSDSchema_FIXED2Source, xsd_gruppe_14_FIXED2Target);

		// close source streams
		convertedXSDSchema_FIXED2Source.close();
		// close target stream
		writeTrace("Saving " + xsd_gruppe_14_FIXED2TargetFilename + "...\n");
		xsd_gruppe_14_FIXED2Target.close();
	}


	// main entry point

	public void run(com.altova.io.Input convertedXSDSchema_FIXED2Source, com.altova.io.Output xsd_gruppe_14_FIXED2Target) throws Exception {
		// Open the source(s)
		org.w3c.dom.Document doc_convertedXSDSchema_FIXED2 = XmlTreeOperations.loadDocument(convertedXSDSchema_FIXED2Source);
		varconvertedXSDSchema_FIXED2Instance = doc_convertedXSDSchema_FIXED2;
		if (runDoesCloseAll)
			convertedXSDSchema_FIXED2Source.close();

		// Create the target
		org.w3c.dom.Document xsd_gruppe_14_FIXED2Doc = (xsd_gruppe_14_FIXED2Target.getType() == com.altova.io.Output.IO_DOM) ? xsd_gruppe_14_FIXED2Target.getDocument() : XmlTreeOperations.createDocument();

		// Execute mapping

		main mapping = new main(new com.altova.xml.DOMDocumentAsMFNodeAdapter(varconvertedXSDSchema_FIXED2Instance, convertedXSDSchema_FIXED2Source.getFilename()));

		com.altova.xml.MFDOMWriter.write(mapping, xsd_gruppe_14_FIXED2Doc);
		// Close the target
		XmlTreeOperations.saveDocument(xsd_gruppe_14_FIXED2Doc, xsd_gruppe_14_FIXED2Target, "UTF-8", false, false, true, false);

		
		if (runDoesCloseAll)
		{
			convertedXSDSchema_FIXED2Source.close();
			xsd_gruppe_14_FIXED2Target.close();
		}
	}



}
