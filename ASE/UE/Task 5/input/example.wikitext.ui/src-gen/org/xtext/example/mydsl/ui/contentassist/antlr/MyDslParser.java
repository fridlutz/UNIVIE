/*
 * generated by Xtext
 */
package org.xtext.example.mydsl.ui.contentassist.antlr;

import java.util.Collection;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

import com.google.inject.Inject;

import org.xtext.example.mydsl.services.MyDslGrammarAccess;

public class MyDslParser extends AbstractContentAssistParser {
	
	@Inject
	private MyDslGrammarAccess grammarAccess;
	
	private Map<AbstractElement, String> nameMappings;
	
	@Override
	protected org.xtext.example.mydsl.ui.contentassist.antlr.internal.InternalMyDslParser createParser() {
		org.xtext.example.mydsl.ui.contentassist.antlr.internal.InternalMyDslParser result = new org.xtext.example.mydsl.ui.contentassist.antlr.internal.InternalMyDslParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getFormattedTextAccess().getFormattedTextAlternatives_0(), "rule__FormattedText__FormattedTextAlternatives_0");
					put(grammarAccess.getFormattedTextWithoutLinksAccess().getFormattedTextWithoutLinksAlternatives_0(), "rule__FormattedTextWithoutLinks__FormattedTextWithoutLinksAlternatives_0");
					put(grammarAccess.getAbstractElementAccess().getElementAlternatives_0(), "rule__AbstractElement__ElementAlternatives_0");
					put(grammarAccess.getTextElementAccess().getElementAlternatives_0(), "rule__TextElement__ElementAlternatives_0");
					put(grammarAccess.getHeadingAccess().getHeadingAlternatives_0(), "rule__Heading__HeadingAlternatives_0");
					put(grammarAccess.getListAccess().getListAlternatives_0(), "rule__List__ListAlternatives_0");
					put(grammarAccess.getOrderedListItemAccess().getItemAlternatives_1_0(), "rule__OrderedListItem__ItemAlternatives_1_0");
					put(grammarAccess.getUnorderedListItemAccess().getItemAlternatives_1_0(), "rule__UnorderedListItem__ItemAlternatives_1_0");
					put(grammarAccess.getItalicTextAccess().getItalicTextAlternatives_1_0(), "rule__ItalicText__ItalicTextAlternatives_1_0");
					put(grammarAccess.getBoldTextAccess().getBoldTextAlternatives_1_0(), "rule__BoldText__BoldTextAlternatives_1_0");
					put(grammarAccess.getItalicBoldTextAccess().getItalicBoldTextAlternatives_1_0(), "rule__ItalicBoldText__ItalicBoldTextAlternatives_1_0");
					put(grammarAccess.getFileAccess().getViewTypeAlternatives_2_0(), "rule__File__ViewTypeAlternatives_2_0");
					put(grammarAccess.getTemplateTypeAccess().getTypeAlternatives_0(), "rule__TemplateType__TypeAlternatives_0");
					put(grammarAccess.getDocumentAccess().getGroup(), "rule__Document__Group__0");
					put(grammarAccess.getHeading1Access().getGroup(), "rule__Heading1__Group__0");
					put(grammarAccess.getHeading2Access().getGroup(), "rule__Heading2__Group__0");
					put(grammarAccess.getHeading3Access().getGroup(), "rule__Heading3__Group__0");
					put(grammarAccess.getHeading4Access().getGroup(), "rule__Heading4__Group__0");
					put(grammarAccess.getOrderedListItemAccess().getGroup(), "rule__OrderedListItem__Group__0");
					put(grammarAccess.getUnorderedListItemAccess().getGroup(), "rule__UnorderedListItem__Group__0");
					put(grammarAccess.getItalicTextAccess().getGroup(), "rule__ItalicText__Group__0");
					put(grammarAccess.getBoldTextAccess().getGroup(), "rule__BoldText__Group__0");
					put(grammarAccess.getItalicBoldTextAccess().getGroup(), "rule__ItalicBoldText__Group__0");
					put(grammarAccess.getBlockQuoteAccess().getGroup(), "rule__BlockQuote__Group__0");
					put(grammarAccess.getExternalLinkAccess().getGroup(), "rule__ExternalLink__Group__0");
					put(grammarAccess.getExternalLinkAccess().getGroup_2(), "rule__ExternalLink__Group_2__0");
					put(grammarAccess.getInternalLinkAccess().getGroup(), "rule__InternalLink__Group__0");
					put(grammarAccess.getInternalLinkAccess().getGroup_2(), "rule__InternalLink__Group_2__0");
					put(grammarAccess.getFileAccess().getGroup(), "rule__File__Group__0");
					put(grammarAccess.getFileAccess().getGroup_3(), "rule__File__Group_3__0");
					put(grammarAccess.getCategoryAccess().getGroup(), "rule__Category__Group__0");
					put(grammarAccess.getTemplateAccess().getGroup(), "rule__Template__Group__0");
					put(grammarAccess.getMetadataAccess().getGroup(), "rule__Metadata__Group__0");
					put(grammarAccess.getAboutAccess().getGroup(), "rule__About__Group__0");
					put(grammarAccess.getActualInformationAccess().getGroup(), "rule__ActualInformation__Group__0");
					put(grammarAccess.getActualInformationAccess().getGroup_4(), "rule__ActualInformation__Group_4__0");
					put(grammarAccess.getMainInformationAccess().getGroup(), "rule__MainInformation__Group__0");
					put(grammarAccess.getDocumentAccess().getTitleAssignment_0(), "rule__Document__TitleAssignment_0");
					put(grammarAccess.getDocumentAccess().getElementsAssignment_1(), "rule__Document__ElementsAssignment_1");
					put(grammarAccess.getDocumentAccess().getCategoriesAssignment_2(), "rule__Document__CategoriesAssignment_2");
					put(grammarAccess.getCommentAccess().getCommentAssignment(), "rule__Comment__CommentAssignment");
					put(grammarAccess.getUnformattedTextAccess().getTextAssignment(), "rule__UnformattedText__TextAssignment");
					put(grammarAccess.getFormattedTextAccess().getFormattedTextAssignment(), "rule__FormattedText__FormattedTextAssignment");
					put(grammarAccess.getFormattedTextWithoutLinksAccess().getFormattedTextWithoutLinksAssignment(), "rule__FormattedTextWithoutLinks__FormattedTextWithoutLinksAssignment");
					put(grammarAccess.getAbstractElementAccess().getElementAssignment(), "rule__AbstractElement__ElementAssignment");
					put(grammarAccess.getTextElementAccess().getElementAssignment(), "rule__TextElement__ElementAssignment");
					put(grammarAccess.getHeadingAccess().getHeadingAssignment(), "rule__Heading__HeadingAssignment");
					put(grammarAccess.getHeading1Access().getHeadingAssignment_1(), "rule__Heading1__HeadingAssignment_1");
					put(grammarAccess.getHeading2Access().getHeadingAssignment_1(), "rule__Heading2__HeadingAssignment_1");
					put(grammarAccess.getHeading3Access().getHeadingAssignment_1(), "rule__Heading3__HeadingAssignment_1");
					put(grammarAccess.getHeading4Access().getHeadingAssignment_1(), "rule__Heading4__HeadingAssignment_1");
					put(grammarAccess.getListAccess().getListAssignment(), "rule__List__ListAssignment");
					put(grammarAccess.getOrderedListAccess().getItemsAssignment(), "rule__OrderedList__ItemsAssignment");
					put(grammarAccess.getUnorderedListAccess().getItemsAssignment(), "rule__UnorderedList__ItemsAssignment");
					put(grammarAccess.getOrderedListItemAccess().getItemAssignment_1(), "rule__OrderedListItem__ItemAssignment_1");
					put(grammarAccess.getUnorderedListItemAccess().getItemAssignment_1(), "rule__UnorderedListItem__ItemAssignment_1");
					put(grammarAccess.getItalicTextAccess().getItalicTextAssignment_1(), "rule__ItalicText__ItalicTextAssignment_1");
					put(grammarAccess.getBoldTextAccess().getBoldTextAssignment_1(), "rule__BoldText__BoldTextAssignment_1");
					put(grammarAccess.getItalicBoldTextAccess().getItalicBoldTextAssignment_1(), "rule__ItalicBoldText__ItalicBoldTextAssignment_1");
					put(grammarAccess.getBlockQuoteAccess().getBlockQuoteTextAssignment_1(), "rule__BlockQuote__BlockQuoteTextAssignment_1");
					put(grammarAccess.getBlockQuoteAccess().getAdditionalAssignment_2(), "rule__BlockQuote__AdditionalAssignment_2");
					put(grammarAccess.getExternalLinkAccess().getLinkNameAssignment_1(), "rule__ExternalLink__LinkNameAssignment_1");
					put(grammarAccess.getExternalLinkAccess().getRenamedLinkAssignment_2_1(), "rule__ExternalLink__RenamedLinkAssignment_2_1");
					put(grammarAccess.getInternalLinkAccess().getLinkNameAssignment_1(), "rule__InternalLink__LinkNameAssignment_1");
					put(grammarAccess.getInternalLinkAccess().getRenamedLinkAssignment_2_1(), "rule__InternalLink__RenamedLinkAssignment_2_1");
					put(grammarAccess.getFileAccess().getFileNameAssignment_1(), "rule__File__FileNameAssignment_1");
					put(grammarAccess.getFileAccess().getViewTypeAssignment_2(), "rule__File__ViewTypeAssignment_2");
					put(grammarAccess.getFileAccess().getTextAssignment_3_1(), "rule__File__TextAssignment_3_1");
					put(grammarAccess.getFileAccess().getAdditionalAssignment_3_2(), "rule__File__AdditionalAssignment_3_2");
					put(grammarAccess.getCategoryAccess().getCategoryLinkAssignment_1(), "rule__Category__CategoryLinkAssignment_1");
					put(grammarAccess.getTemplateAccess().getTemplateAssignment_1(), "rule__Template__TemplateAssignment_1");
					put(grammarAccess.getTemplateTypeAccess().getTypeAssignment(), "rule__TemplateType__TypeAssignment");
					put(grammarAccess.getMetadataAccess().getAboutAssignment_0(), "rule__Metadata__AboutAssignment_0");
					put(grammarAccess.getMetadataAccess().getActualInfoAssignment_1(), "rule__Metadata__ActualInfoAssignment_1");
					put(grammarAccess.getAboutAccess().getAboutTextAssignment_1(), "rule__About__AboutTextAssignment_1");
					put(grammarAccess.getActualInformationAccess().getInformationOnWhatAssignment_1(), "rule__ActualInformation__InformationOnWhatAssignment_1");
					put(grammarAccess.getActualInformationAccess().getLinkAssignment_3(), "rule__ActualInformation__LinkAssignment_3");
					put(grammarAccess.getActualInformationAccess().getAdditionalLinksAssignment_4_1(), "rule__ActualInformation__AdditionalLinksAssignment_4_1");
					put(grammarAccess.getMainInformationAccess().getLinkAssignment_1(), "rule__MainInformation__LinkAssignment_1");
				}
			};
		}
		return nameMappings.get(element);
	}
	
	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			org.xtext.example.mydsl.ui.contentassist.antlr.internal.InternalMyDslParser typedParser = (org.xtext.example.mydsl.ui.contentassist.antlr.internal.InternalMyDslParser) parser;
			typedParser.entryRuleDocument();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}		
	}
	
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}
	
	public MyDslGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}
	
	public void setGrammarAccess(MyDslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
