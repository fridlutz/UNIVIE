/*
 * generated by Xtext
 */
grammar InternalMyDsl;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package org.xtext.example.mydsl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.example.mydsl.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.example.mydsl.services.MyDslGrammarAccess;

}

@parser::members {

 	private MyDslGrammarAccess grammarAccess;
 	
    public InternalMyDslParser(TokenStream input, MyDslGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "Document";	
   	}
   	
   	@Override
   	protected MyDslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleDocument
entryRuleDocument returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDocumentRule()); }
	 iv_ruleDocument=ruleDocument 
	 { $current=$iv_ruleDocument.current; } 
	 EOF 
;

// Rule Document
ruleDocument returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getDocumentAccess().getTitleHeading1ParserRuleCall_0_0()); 
	    }
		lv_title_0_0=ruleHeading1		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDocumentRule());
	        }
       		set(
       			$current, 
       			"title",
        		lv_title_0_0, 
        		"Heading1");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getDocumentAccess().getElementsAbstractElementParserRuleCall_1_0()); 
	    }
		lv_elements_1_0=ruleAbstractElement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDocumentRule());
	        }
       		add(
       			$current, 
       			"elements",
        		lv_elements_1_0, 
        		"AbstractElement");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getDocumentAccess().getCategoriesCategoryParserRuleCall_2_0()); 
	    }
		lv_categories_2_0=ruleCategory		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDocumentRule());
	        }
       		add(
       			$current, 
       			"categories",
        		lv_categories_2_0, 
        		"Category");
	        afterParserOrEnumRuleCall();
	    }

)
)*)
;





// Entry rule entryRuleComment
entryRuleComment returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCommentRule()); }
	 iv_ruleComment=ruleComment 
	 { $current=$iv_ruleComment.current; } 
	 EOF 
;

// Rule Comment
ruleComment returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_comment_0_0=RULE_WIKI_COMMENT
		{
			newLeafNode(lv_comment_0_0, grammarAccess.getCommentAccess().getCommentWIKI_COMMENTTerminalRuleCall_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCommentRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"comment",
        		lv_comment_0_0, 
        		"WIKI_COMMENT");
	    }

)
)
;





// Entry rule entryRuleUnformattedText
entryRuleUnformattedText returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getUnformattedTextRule()); }
	 iv_ruleUnformattedText=ruleUnformattedText 
	 { $current=$iv_ruleUnformattedText.current; } 
	 EOF 
;

// Rule UnformattedText
ruleUnformattedText returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_text_0_0=RULE_CUSTOM_STRING
		{
			newLeafNode(lv_text_0_0, grammarAccess.getUnformattedTextAccess().getTextCUSTOM_STRINGTerminalRuleCall_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getUnformattedTextRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"text",
        		lv_text_0_0, 
        		"CUSTOM_STRING");
	    }

)
)
;





// Entry rule entryRuleFormattedText
entryRuleFormattedText returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFormattedTextRule()); }
	 iv_ruleFormattedText=ruleFormattedText 
	 { $current=$iv_ruleFormattedText.current; } 
	 EOF 
;

// Rule FormattedText
ruleFormattedText returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
(
		{ 
	        newCompositeNode(grammarAccess.getFormattedTextAccess().getFormattedTextItalicTextParserRuleCall_0_0()); 
	    }
		lv_formattedText_0_1=ruleItalicText		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFormattedTextRule());
	        }
       		set(
       			$current, 
       			"formattedText",
        		lv_formattedText_0_1, 
        		"ItalicText");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getFormattedTextAccess().getFormattedTextBoldTextParserRuleCall_0_1()); 
	    }
		lv_formattedText_0_2=ruleBoldText		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFormattedTextRule());
	        }
       		set(
       			$current, 
       			"formattedText",
        		lv_formattedText_0_2, 
        		"BoldText");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getFormattedTextAccess().getFormattedTextItalicBoldTextParserRuleCall_0_2()); 
	    }
		lv_formattedText_0_3=ruleItalicBoldText		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFormattedTextRule());
	        }
       		set(
       			$current, 
       			"formattedText",
        		lv_formattedText_0_3, 
        		"ItalicBoldText");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getFormattedTextAccess().getFormattedTextInternalLinkParserRuleCall_0_3()); 
	    }
		lv_formattedText_0_4=ruleInternalLink		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFormattedTextRule());
	        }
       		set(
       			$current, 
       			"formattedText",
        		lv_formattedText_0_4, 
        		"InternalLink");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getFormattedTextAccess().getFormattedTextExternalLinkParserRuleCall_0_4()); 
	    }
		lv_formattedText_0_5=ruleExternalLink		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFormattedTextRule());
	        }
       		set(
       			$current, 
       			"formattedText",
        		lv_formattedText_0_5, 
        		"ExternalLink");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getFormattedTextAccess().getFormattedTextUnformattedTextParserRuleCall_0_5()); 
	    }
		lv_formattedText_0_6=ruleUnformattedText		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFormattedTextRule());
	        }
       		set(
       			$current, 
       			"formattedText",
        		lv_formattedText_0_6, 
        		"UnformattedText");
	        afterParserOrEnumRuleCall();
	    }

)

)
)
;





// Entry rule entryRuleFormattedTextWithoutLinks
entryRuleFormattedTextWithoutLinks returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFormattedTextWithoutLinksRule()); }
	 iv_ruleFormattedTextWithoutLinks=ruleFormattedTextWithoutLinks 
	 { $current=$iv_ruleFormattedTextWithoutLinks.current; } 
	 EOF 
;

// Rule FormattedTextWithoutLinks
ruleFormattedTextWithoutLinks returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
(
		{ 
	        newCompositeNode(grammarAccess.getFormattedTextWithoutLinksAccess().getFormattedTextWithoutLinksItalicTextParserRuleCall_0_0()); 
	    }
		lv_formattedTextWithoutLinks_0_1=ruleItalicText		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFormattedTextWithoutLinksRule());
	        }
       		set(
       			$current, 
       			"formattedTextWithoutLinks",
        		lv_formattedTextWithoutLinks_0_1, 
        		"ItalicText");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getFormattedTextWithoutLinksAccess().getFormattedTextWithoutLinksBoldTextParserRuleCall_0_1()); 
	    }
		lv_formattedTextWithoutLinks_0_2=ruleBoldText		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFormattedTextWithoutLinksRule());
	        }
       		set(
       			$current, 
       			"formattedTextWithoutLinks",
        		lv_formattedTextWithoutLinks_0_2, 
        		"BoldText");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getFormattedTextWithoutLinksAccess().getFormattedTextWithoutLinksItalicBoldTextParserRuleCall_0_2()); 
	    }
		lv_formattedTextWithoutLinks_0_3=ruleItalicBoldText		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFormattedTextWithoutLinksRule());
	        }
       		set(
       			$current, 
       			"formattedTextWithoutLinks",
        		lv_formattedTextWithoutLinks_0_3, 
        		"ItalicBoldText");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getFormattedTextWithoutLinksAccess().getFormattedTextWithoutLinksUnformattedTextParserRuleCall_0_3()); 
	    }
		lv_formattedTextWithoutLinks_0_4=ruleUnformattedText		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFormattedTextWithoutLinksRule());
	        }
       		set(
       			$current, 
       			"formattedTextWithoutLinks",
        		lv_formattedTextWithoutLinks_0_4, 
        		"UnformattedText");
	        afterParserOrEnumRuleCall();
	    }

)

)
)
;





// Entry rule entryRuleAbstractElement
entryRuleAbstractElement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAbstractElementRule()); }
	 iv_ruleAbstractElement=ruleAbstractElement 
	 { $current=$iv_ruleAbstractElement.current; } 
	 EOF 
;

// Rule AbstractElement
ruleAbstractElement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
(
		{ 
	        newCompositeNode(grammarAccess.getAbstractElementAccess().getElementTemplateParserRuleCall_0_0()); 
	    }
		lv_element_0_1=ruleTemplate		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAbstractElementRule());
	        }
       		set(
       			$current, 
       			"element",
        		lv_element_0_1, 
        		"Template");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getAbstractElementAccess().getElementHeadingParserRuleCall_0_1()); 
	    }
		lv_element_0_2=ruleHeading		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAbstractElementRule());
	        }
       		set(
       			$current, 
       			"element",
        		lv_element_0_2, 
        		"Heading");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getAbstractElementAccess().getElementTextElementParserRuleCall_0_2()); 
	    }
		lv_element_0_3=ruleTextElement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAbstractElementRule());
	        }
       		set(
       			$current, 
       			"element",
        		lv_element_0_3, 
        		"TextElement");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getAbstractElementAccess().getElementCommentParserRuleCall_0_3()); 
	    }
		lv_element_0_4=ruleComment		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAbstractElementRule());
	        }
       		set(
       			$current, 
       			"element",
        		lv_element_0_4, 
        		"Comment");
	        afterParserOrEnumRuleCall();
	    }

)

)
)
;





// Entry rule entryRuleTextElement
entryRuleTextElement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTextElementRule()); }
	 iv_ruleTextElement=ruleTextElement 
	 { $current=$iv_ruleTextElement.current; } 
	 EOF 
;

// Rule TextElement
ruleTextElement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
(
		{ 
	        newCompositeNode(grammarAccess.getTextElementAccess().getElementBlockQuoteParserRuleCall_0_0()); 
	    }
		lv_element_0_1=ruleBlockQuote		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTextElementRule());
	        }
       		set(
       			$current, 
       			"element",
        		lv_element_0_1, 
        		"BlockQuote");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getTextElementAccess().getElementFileParserRuleCall_0_1()); 
	    }
		lv_element_0_2=ruleFile		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTextElementRule());
	        }
       		set(
       			$current, 
       			"element",
        		lv_element_0_2, 
        		"File");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getTextElementAccess().getElementListParserRuleCall_0_2()); 
	    }
		lv_element_0_3=ruleList		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTextElementRule());
	        }
       		set(
       			$current, 
       			"element",
        		lv_element_0_3, 
        		"List");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getTextElementAccess().getElementFormattedTextParserRuleCall_0_3()); 
	    }
		lv_element_0_4=ruleFormattedText		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTextElementRule());
	        }
       		set(
       			$current, 
       			"element",
        		lv_element_0_4, 
        		"FormattedText");
	        afterParserOrEnumRuleCall();
	    }

)

)
)
;





// Entry rule entryRuleHeading
entryRuleHeading returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getHeadingRule()); }
	 iv_ruleHeading=ruleHeading 
	 { $current=$iv_ruleHeading.current; } 
	 EOF 
;

// Rule Heading
ruleHeading returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
(
		{ 
	        newCompositeNode(grammarAccess.getHeadingAccess().getHeadingHeading2ParserRuleCall_0_0()); 
	    }
		lv_heading_0_1=ruleHeading2		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getHeadingRule());
	        }
       		set(
       			$current, 
       			"heading",
        		lv_heading_0_1, 
        		"Heading2");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getHeadingAccess().getHeadingHeading3ParserRuleCall_0_1()); 
	    }
		lv_heading_0_2=ruleHeading3		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getHeadingRule());
	        }
       		set(
       			$current, 
       			"heading",
        		lv_heading_0_2, 
        		"Heading3");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getHeadingAccess().getHeadingHeading4ParserRuleCall_0_2()); 
	    }
		lv_heading_0_3=ruleHeading4		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getHeadingRule());
	        }
       		set(
       			$current, 
       			"heading",
        		lv_heading_0_3, 
        		"Heading4");
	        afterParserOrEnumRuleCall();
	    }

)

)
)
;





// Entry rule entryRuleHeading1
entryRuleHeading1 returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getHeading1Rule()); }
	 iv_ruleHeading1=ruleHeading1 
	 { $current=$iv_ruleHeading1.current; } 
	 EOF 
;

// Rule Heading1
ruleHeading1 returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='=' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getHeading1Access().getEqualsSignKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getHeading1Access().getHeadingFormattedTextParserRuleCall_1_0()); 
	    }
		lv_heading_1_0=ruleFormattedText		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getHeading1Rule());
	        }
       		set(
       			$current, 
       			"heading",
        		lv_heading_1_0, 
        		"FormattedText");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='=' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getHeading1Access().getEqualsSignKeyword_2());
    }
)
;





// Entry rule entryRuleHeading2
entryRuleHeading2 returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getHeading2Rule()); }
	 iv_ruleHeading2=ruleHeading2 
	 { $current=$iv_ruleHeading2.current; } 
	 EOF 
;

// Rule Heading2
ruleHeading2 returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='==' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getHeading2Access().getEqualsSignEqualsSignKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getHeading2Access().getHeadingFormattedTextParserRuleCall_1_0()); 
	    }
		lv_heading_1_0=ruleFormattedText		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getHeading2Rule());
	        }
       		set(
       			$current, 
       			"heading",
        		lv_heading_1_0, 
        		"FormattedText");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='==' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getHeading2Access().getEqualsSignEqualsSignKeyword_2());
    }
)
;





// Entry rule entryRuleHeading3
entryRuleHeading3 returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getHeading3Rule()); }
	 iv_ruleHeading3=ruleHeading3 
	 { $current=$iv_ruleHeading3.current; } 
	 EOF 
;

// Rule Heading3
ruleHeading3 returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='===' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getHeading3Access().getEqualsSignEqualsSignEqualsSignKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getHeading3Access().getHeadingFormattedTextParserRuleCall_1_0()); 
	    }
		lv_heading_1_0=ruleFormattedText		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getHeading3Rule());
	        }
       		set(
       			$current, 
       			"heading",
        		lv_heading_1_0, 
        		"FormattedText");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='===' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getHeading3Access().getEqualsSignEqualsSignEqualsSignKeyword_2());
    }
)
;





// Entry rule entryRuleHeading4
entryRuleHeading4 returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getHeading4Rule()); }
	 iv_ruleHeading4=ruleHeading4 
	 { $current=$iv_ruleHeading4.current; } 
	 EOF 
;

// Rule Heading4
ruleHeading4 returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='====' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getHeading4Access().getEqualsSignEqualsSignEqualsSignEqualsSignKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getHeading4Access().getHeadingFormattedTextParserRuleCall_1_0()); 
	    }
		lv_heading_1_0=ruleFormattedText		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getHeading4Rule());
	        }
       		set(
       			$current, 
       			"heading",
        		lv_heading_1_0, 
        		"FormattedText");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='====' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getHeading4Access().getEqualsSignEqualsSignEqualsSignEqualsSignKeyword_2());
    }
)
;





// Entry rule entryRuleList
entryRuleList returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getListRule()); }
	 iv_ruleList=ruleList 
	 { $current=$iv_ruleList.current; } 
	 EOF 
;

// Rule List
ruleList returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
(
		{ 
	        newCompositeNode(grammarAccess.getListAccess().getListOrderedListParserRuleCall_0_0()); 
	    }
		lv_list_0_1=ruleOrderedList		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getListRule());
	        }
       		set(
       			$current, 
       			"list",
        		lv_list_0_1, 
        		"OrderedList");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getListAccess().getListUnorderedListParserRuleCall_0_1()); 
	    }
		lv_list_0_2=ruleUnorderedList		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getListRule());
	        }
       		set(
       			$current, 
       			"list",
        		lv_list_0_2, 
        		"UnorderedList");
	        afterParserOrEnumRuleCall();
	    }

)

)
)
;





// Entry rule entryRuleOrderedList
entryRuleOrderedList returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOrderedListRule()); }
	 iv_ruleOrderedList=ruleOrderedList 
	 { $current=$iv_ruleOrderedList.current; } 
	 EOF 
;

// Rule OrderedList
ruleOrderedList returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{ 
	        newCompositeNode(grammarAccess.getOrderedListAccess().getItemsOrderedListItemParserRuleCall_0()); 
	    }
		lv_items_0_0=ruleOrderedListItem		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOrderedListRule());
	        }
       		add(
       			$current, 
       			"items",
        		lv_items_0_0, 
        		"OrderedListItem");
	        afterParserOrEnumRuleCall();
	    }

)
)
;





// Entry rule entryRuleUnorderedList
entryRuleUnorderedList returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getUnorderedListRule()); }
	 iv_ruleUnorderedList=ruleUnorderedList 
	 { $current=$iv_ruleUnorderedList.current; } 
	 EOF 
;

// Rule UnorderedList
ruleUnorderedList returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{ 
	        newCompositeNode(grammarAccess.getUnorderedListAccess().getItemsUnorderedListItemParserRuleCall_0()); 
	    }
		lv_items_0_0=ruleUnorderedListItem		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUnorderedListRule());
	        }
       		add(
       			$current, 
       			"items",
        		lv_items_0_0, 
        		"UnorderedListItem");
	        afterParserOrEnumRuleCall();
	    }

)
)
;





// Entry rule entryRuleOrderedListItem
entryRuleOrderedListItem returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOrderedListItemRule()); }
	 iv_ruleOrderedListItem=ruleOrderedListItem 
	 { $current=$iv_ruleOrderedListItem.current; } 
	 EOF 
;

// Rule OrderedListItem
ruleOrderedListItem returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='#' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getOrderedListItemAccess().getNumberSignKeyword_0());
    }
(
(
(
		{ 
	        newCompositeNode(grammarAccess.getOrderedListItemAccess().getItemFormattedTextParserRuleCall_1_0_0()); 
	    }
		lv_item_1_1=ruleFormattedText		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOrderedListItemRule());
	        }
       		set(
       			$current, 
       			"item",
        		lv_item_1_1, 
        		"FormattedText");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getOrderedListItemAccess().getItemListParserRuleCall_1_0_1()); 
	    }
		lv_item_1_2=ruleList		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOrderedListItemRule());
	        }
       		set(
       			$current, 
       			"item",
        		lv_item_1_2, 
        		"List");
	        afterParserOrEnumRuleCall();
	    }

)

)
))
;





// Entry rule entryRuleUnorderedListItem
entryRuleUnorderedListItem returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getUnorderedListItemRule()); }
	 iv_ruleUnorderedListItem=ruleUnorderedListItem 
	 { $current=$iv_ruleUnorderedListItem.current; } 
	 EOF 
;

// Rule UnorderedListItem
ruleUnorderedListItem returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='*' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getUnorderedListItemAccess().getAsteriskKeyword_0());
    }
(
(
(
		{ 
	        newCompositeNode(grammarAccess.getUnorderedListItemAccess().getItemFormattedTextParserRuleCall_1_0_0()); 
	    }
		lv_item_1_1=ruleFormattedText		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUnorderedListItemRule());
	        }
       		set(
       			$current, 
       			"item",
        		lv_item_1_1, 
        		"FormattedText");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getUnorderedListItemAccess().getItemListParserRuleCall_1_0_1()); 
	    }
		lv_item_1_2=ruleList		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUnorderedListItemRule());
	        }
       		set(
       			$current, 
       			"item",
        		lv_item_1_2, 
        		"List");
	        afterParserOrEnumRuleCall();
	    }

)

)
))
;





// Entry rule entryRuleItalicText
entryRuleItalicText returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getItalicTextRule()); }
	 iv_ruleItalicText=ruleItalicText 
	 { $current=$iv_ruleItalicText.current; } 
	 EOF 
;

// Rule ItalicText
ruleItalicText returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='\'\'' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getItalicTextAccess().getApostropheApostropheKeyword_0());
    }
(
(
(
		{ 
	        newCompositeNode(grammarAccess.getItalicTextAccess().getItalicTextInternalLinkParserRuleCall_1_0_0()); 
	    }
		lv_italicText_1_1=ruleInternalLink		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getItalicTextRule());
	        }
       		set(
       			$current, 
       			"italicText",
        		lv_italicText_1_1, 
        		"InternalLink");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getItalicTextAccess().getItalicTextExternalLinkParserRuleCall_1_0_1()); 
	    }
		lv_italicText_1_2=ruleExternalLink		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getItalicTextRule());
	        }
       		set(
       			$current, 
       			"italicText",
        		lv_italicText_1_2, 
        		"ExternalLink");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getItalicTextAccess().getItalicTextUnformattedTextParserRuleCall_1_0_2()); 
	    }
		lv_italicText_1_3=ruleUnformattedText		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getItalicTextRule());
	        }
       		set(
       			$current, 
       			"italicText",
        		lv_italicText_1_3, 
        		"UnformattedText");
	        afterParserOrEnumRuleCall();
	    }

)

)
)	otherlv_2='\'\'' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getItalicTextAccess().getApostropheApostropheKeyword_2());
    }
)
;





// Entry rule entryRuleBoldText
entryRuleBoldText returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBoldTextRule()); }
	 iv_ruleBoldText=ruleBoldText 
	 { $current=$iv_ruleBoldText.current; } 
	 EOF 
;

// Rule BoldText
ruleBoldText returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='\'\'\'' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getBoldTextAccess().getApostropheApostropheApostropheKeyword_0());
    }
(
(
(
		{ 
	        newCompositeNode(grammarAccess.getBoldTextAccess().getBoldTextInternalLinkParserRuleCall_1_0_0()); 
	    }
		lv_boldText_1_1=ruleInternalLink		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBoldTextRule());
	        }
       		set(
       			$current, 
       			"boldText",
        		lv_boldText_1_1, 
        		"InternalLink");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getBoldTextAccess().getBoldTextExternalLinkParserRuleCall_1_0_1()); 
	    }
		lv_boldText_1_2=ruleExternalLink		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBoldTextRule());
	        }
       		set(
       			$current, 
       			"boldText",
        		lv_boldText_1_2, 
        		"ExternalLink");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getBoldTextAccess().getBoldTextUnformattedTextParserRuleCall_1_0_2()); 
	    }
		lv_boldText_1_3=ruleUnformattedText		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBoldTextRule());
	        }
       		set(
       			$current, 
       			"boldText",
        		lv_boldText_1_3, 
        		"UnformattedText");
	        afterParserOrEnumRuleCall();
	    }

)

)
)	otherlv_2='\'\'\'' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getBoldTextAccess().getApostropheApostropheApostropheKeyword_2());
    }
)
;





// Entry rule entryRuleItalicBoldText
entryRuleItalicBoldText returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getItalicBoldTextRule()); }
	 iv_ruleItalicBoldText=ruleItalicBoldText 
	 { $current=$iv_ruleItalicBoldText.current; } 
	 EOF 
;

// Rule ItalicBoldText
ruleItalicBoldText returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='\'\'\'\'\'' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getItalicBoldTextAccess().getApostropheApostropheApostropheApostropheApostropheKeyword_0());
    }
(
(
(
		{ 
	        newCompositeNode(grammarAccess.getItalicBoldTextAccess().getItalicBoldTextInternalLinkParserRuleCall_1_0_0()); 
	    }
		lv_italicBoldText_1_1=ruleInternalLink		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getItalicBoldTextRule());
	        }
       		set(
       			$current, 
       			"italicBoldText",
        		lv_italicBoldText_1_1, 
        		"InternalLink");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getItalicBoldTextAccess().getItalicBoldTextExternalLinkParserRuleCall_1_0_1()); 
	    }
		lv_italicBoldText_1_2=ruleExternalLink		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getItalicBoldTextRule());
	        }
       		set(
       			$current, 
       			"italicBoldText",
        		lv_italicBoldText_1_2, 
        		"ExternalLink");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getItalicBoldTextAccess().getItalicBoldTextUnformattedTextParserRuleCall_1_0_2()); 
	    }
		lv_italicBoldText_1_3=ruleUnformattedText		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getItalicBoldTextRule());
	        }
       		set(
       			$current, 
       			"italicBoldText",
        		lv_italicBoldText_1_3, 
        		"UnformattedText");
	        afterParserOrEnumRuleCall();
	    }

)

)
)	otherlv_2='\'\'\'\'\'' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getItalicBoldTextAccess().getApostropheApostropheApostropheApostropheApostropheKeyword_2());
    }
)
;





// Entry rule entryRuleBlockQuote
entryRuleBlockQuote returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBlockQuoteRule()); }
	 iv_ruleBlockQuote=ruleBlockQuote 
	 { $current=$iv_ruleBlockQuote.current; } 
	 EOF 
;

// Rule BlockQuote
ruleBlockQuote returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='<blockquote>' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getBlockQuoteAccess().getBlockquoteKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBlockQuoteAccess().getBlockQuoteTextFormattedTextParserRuleCall_1_0()); 
	    }
		lv_blockQuoteText_1_0=ruleFormattedText		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBlockQuoteRule());
	        }
       		set(
       			$current, 
       			"blockQuoteText",
        		lv_blockQuoteText_1_0, 
        		"FormattedText");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getBlockQuoteAccess().getAdditionalFormattedTextParserRuleCall_2_0()); 
	    }
		lv_additional_2_0=ruleFormattedText		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBlockQuoteRule());
	        }
       		add(
       			$current, 
       			"additional",
        		lv_additional_2_0, 
        		"FormattedText");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_3='</blockquote>' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getBlockQuoteAccess().getBlockquoteKeyword_3());
    }
)
;





// Entry rule entryRuleExternalLink
entryRuleExternalLink returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getExternalLinkRule()); }
	 iv_ruleExternalLink=ruleExternalLink 
	 { $current=$iv_ruleExternalLink.current; } 
	 EOF 
;

// Rule ExternalLink
ruleExternalLink returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='[' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getExternalLinkAccess().getLeftSquareBracketKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getExternalLinkAccess().getLinkNameUnformattedTextParserRuleCall_1_0()); 
	    }
		lv_linkName_1_0=ruleUnformattedText		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExternalLinkRule());
	        }
       		set(
       			$current, 
       			"linkName",
        		lv_linkName_1_0, 
        		"UnformattedText");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_2=' ' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getExternalLinkAccess().getSpaceKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getExternalLinkAccess().getRenamedLinkFormattedTextWithoutLinksParserRuleCall_2_1_0()); 
	    }
		lv_renamedLink_3_0=ruleFormattedTextWithoutLinks		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExternalLinkRule());
	        }
       		set(
       			$current, 
       			"renamedLink",
        		lv_renamedLink_3_0, 
        		"FormattedTextWithoutLinks");
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_4=']' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getExternalLinkAccess().getRightSquareBracketKeyword_3());
    }
)
;





// Entry rule entryRuleInternalLink
entryRuleInternalLink returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInternalLinkRule()); }
	 iv_ruleInternalLink=ruleInternalLink 
	 { $current=$iv_ruleInternalLink.current; } 
	 EOF 
;

// Rule InternalLink
ruleInternalLink returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='[[' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getInternalLinkAccess().getLeftSquareBracketLeftSquareBracketKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInternalLinkAccess().getLinkNameUnformattedTextParserRuleCall_1_0()); 
	    }
		lv_linkName_1_0=ruleUnformattedText		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInternalLinkRule());
	        }
       		set(
       			$current, 
       			"linkName",
        		lv_linkName_1_0, 
        		"UnformattedText");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_2='|' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getInternalLinkAccess().getVerticalLineKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInternalLinkAccess().getRenamedLinkFormattedTextWithoutLinksParserRuleCall_2_1_0()); 
	    }
		lv_renamedLink_3_0=ruleFormattedTextWithoutLinks		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInternalLinkRule());
	        }
       		set(
       			$current, 
       			"renamedLink",
        		lv_renamedLink_3_0, 
        		"FormattedTextWithoutLinks");
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_4=']]' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getInternalLinkAccess().getRightSquareBracketRightSquareBracketKeyword_3());
    }
)
;





// Entry rule entryRuleFile
entryRuleFile returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFileRule()); }
	 iv_ruleFile=ruleFile 
	 { $current=$iv_ruleFile.current; } 
	 EOF 
;

// Rule File
ruleFile returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='[[File:' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getFileAccess().getFileKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFileAccess().getFileNameUnformattedTextParserRuleCall_1_0()); 
	    }
		lv_fileName_1_0=ruleUnformattedText		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFileRule());
	        }
       		set(
       			$current, 
       			"fileName",
        		lv_fileName_1_0, 
        		"UnformattedText");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
(
		lv_viewType_2_1=	'|thumb' 
    {
        newLeafNode(lv_viewType_2_1, grammarAccess.getFileAccess().getViewTypeThumbKeyword_2_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFileRule());
	        }
       		setWithLastConsumed($current, "viewType", lv_viewType_2_1, null);
	    }

    |		lv_viewType_2_2=	'|frame' 
    {
        newLeafNode(lv_viewType_2_2, grammarAccess.getFileAccess().getViewTypeFrameKeyword_2_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFileRule());
	        }
       		setWithLastConsumed($current, "viewType", lv_viewType_2_2, null);
	    }

    |		lv_viewType_2_3=	'|frameless' 
    {
        newLeafNode(lv_viewType_2_3, grammarAccess.getFileAccess().getViewTypeFramelessKeyword_2_0_2());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFileRule());
	        }
       		setWithLastConsumed($current, "viewType", lv_viewType_2_3, null);
	    }

)

)
)?(	otherlv_3='|' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getFileAccess().getVerticalLineKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFileAccess().getTextFormattedTextWithoutLinksParserRuleCall_3_1_0()); 
	    }
		lv_text_4_0=ruleFormattedTextWithoutLinks		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFileRule());
	        }
       		set(
       			$current, 
       			"text",
        		lv_text_4_0, 
        		"FormattedTextWithoutLinks");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getFileAccess().getAdditionalFormattedTextWithoutLinksParserRuleCall_3_2_0()); 
	    }
		lv_additional_5_0=ruleFormattedTextWithoutLinks		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFileRule());
	        }
       		add(
       			$current, 
       			"additional",
        		lv_additional_5_0, 
        		"FormattedTextWithoutLinks");
	        afterParserOrEnumRuleCall();
	    }

)
)*)?	otherlv_6=']]' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getFileAccess().getRightSquareBracketRightSquareBracketKeyword_4());
    }
)
;





// Entry rule entryRuleCategory
entryRuleCategory returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCategoryRule()); }
	 iv_ruleCategory=ruleCategory 
	 { $current=$iv_ruleCategory.current; } 
	 EOF 
;

// Rule Category
ruleCategory returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='[[Category:' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getCategoryAccess().getCategoryKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCategoryAccess().getCategoryLinkUnformattedTextParserRuleCall_1_0()); 
	    }
		lv_categoryLink_1_0=ruleUnformattedText		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCategoryRule());
	        }
       		set(
       			$current, 
       			"categoryLink",
        		lv_categoryLink_1_0, 
        		"UnformattedText");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_2='|*' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getCategoryAccess().getVerticalLineAsteriskKeyword_2());
    }
)?	otherlv_3=']]' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getCategoryAccess().getRightSquareBracketRightSquareBracketKeyword_3());
    }
)
;





// Entry rule entryRuleTemplate
entryRuleTemplate returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTemplateRule()); }
	 iv_ruleTemplate=ruleTemplate 
	 { $current=$iv_ruleTemplate.current; } 
	 EOF 
;

// Rule Template
ruleTemplate returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='{{' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getTemplateAccess().getLeftCurlyBracketLeftCurlyBracketKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTemplateAccess().getTemplateTemplateTypeParserRuleCall_1_0()); 
	    }
		lv_template_1_0=ruleTemplateType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTemplateRule());
	        }
       		set(
       			$current, 
       			"template",
        		lv_template_1_0, 
        		"TemplateType");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='}}' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getTemplateAccess().getRightCurlyBracketRightCurlyBracketKeyword_2());
    }
)
;





// Entry rule entryRuleTemplateType
entryRuleTemplateType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTemplateTypeRule()); }
	 iv_ruleTemplateType=ruleTemplateType 
	 { $current=$iv_ruleTemplateType.current; } 
	 EOF 
;

// Rule TemplateType
ruleTemplateType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
(
		{ 
	        newCompositeNode(grammarAccess.getTemplateTypeAccess().getTypeMetadataParserRuleCall_0_0()); 
	    }
		lv_type_0_1=ruleMetadata		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTemplateTypeRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_0_1, 
        		"Metadata");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getTemplateTypeAccess().getTypeMainInformationParserRuleCall_0_1()); 
	    }
		lv_type_0_2=ruleMainInformation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTemplateTypeRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_0_2, 
        		"MainInformation");
	        afterParserOrEnumRuleCall();
	    }

)

)
)
;





// Entry rule entryRuleMetadata
entryRuleMetadata returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMetadataRule()); }
	 iv_ruleMetadata=ruleMetadata 
	 { $current=$iv_ruleMetadata.current; } 
	 EOF 
;

// Rule Metadata
ruleMetadata returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getMetadataAccess().getAboutAboutParserRuleCall_0_0()); 
	    }
		lv_about_0_0=ruleAbout		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMetadataRule());
	        }
       		set(
       			$current, 
       			"about",
        		lv_about_0_0, 
        		"About");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getMetadataAccess().getActualInfoActualInformationParserRuleCall_1_0()); 
	    }
		lv_actualInfo_1_0=ruleActualInformation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMetadataRule());
	        }
       		set(
       			$current, 
       			"actualInfo",
        		lv_actualInfo_1_0, 
        		"ActualInformation");
	        afterParserOrEnumRuleCall();
	    }

)
)?)
;





// Entry rule entryRuleAbout
entryRuleAbout returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAboutRule()); }
	 iv_ruleAbout=ruleAbout 
	 { $current=$iv_ruleAbout.current; } 
	 EOF 
;

// Rule About
ruleAbout returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='about|' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getAboutAccess().getAboutKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAboutAccess().getAboutTextUnformattedTextParserRuleCall_1_0()); 
	    }
		lv_aboutText_1_0=ruleUnformattedText		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAboutRule());
	        }
       		set(
       			$current, 
       			"aboutText",
        		lv_aboutText_1_0, 
        		"UnformattedText");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleActualInformation
entryRuleActualInformation returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getActualInformationRule()); }
	 iv_ruleActualInformation=ruleActualInformation 
	 { $current=$iv_ruleActualInformation.current; } 
	 EOF 
;

// Rule ActualInformation
ruleActualInformation returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='|' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getActualInformationAccess().getVerticalLineKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getActualInformationAccess().getInformationOnWhatUnformattedTextParserRuleCall_1_0()); 
	    }
		lv_informationOnWhat_1_0=ruleUnformattedText		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getActualInformationRule());
	        }
       		set(
       			$current, 
       			"informationOnWhat",
        		lv_informationOnWhat_1_0, 
        		"UnformattedText");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='|' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getActualInformationAccess().getVerticalLineKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getActualInformationAccess().getLinkUnformattedTextParserRuleCall_3_0()); 
	    }
		lv_link_3_0=ruleUnformattedText		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getActualInformationRule());
	        }
       		set(
       			$current, 
       			"link",
        		lv_link_3_0, 
        		"UnformattedText");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_4='|and|' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getActualInformationAccess().getAndKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getActualInformationAccess().getAdditionalLinksUnformattedTextParserRuleCall_4_1_0()); 
	    }
		lv_additionalLinks_5_0=ruleUnformattedText		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getActualInformationRule());
	        }
       		add(
       			$current, 
       			"additionalLinks",
        		lv_additionalLinks_5_0, 
        		"UnformattedText");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleMainInformation
entryRuleMainInformation returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMainInformationRule()); }
	 iv_ruleMainInformation=ruleMainInformation 
	 { $current=$iv_ruleMainInformation.current; } 
	 EOF 
;

// Rule MainInformation
ruleMainInformation returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='main|' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getMainInformationAccess().getMainKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMainInformationAccess().getLinkUnformattedTextParserRuleCall_1_0()); 
	    }
		lv_link_1_0=ruleUnformattedText		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMainInformationRule());
	        }
       		set(
       			$current, 
       			"link",
        		lv_link_1_0, 
        		"UnformattedText");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





RULE_CUSTOM_STRING : ('a'..'z'|'A'..'Z'|'0'..'9'|'_'|'-'|'.'|'!'|'?'|','|'#'|':'|'('|')'|' '|'/'|'"')+;

RULE_WIKI_COMMENT : '<!--' ( options {greedy=false;} : . )*'-->';

RULE_STRING : '\u00B4';

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


