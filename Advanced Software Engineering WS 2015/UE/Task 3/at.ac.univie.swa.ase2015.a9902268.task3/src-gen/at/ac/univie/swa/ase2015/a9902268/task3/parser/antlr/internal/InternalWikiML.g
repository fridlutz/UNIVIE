/*
 * generated by Xtext
 */
grammar InternalWikiML;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package at.ac.univie.swa.ase2015.a9902268.task3.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package at.ac.univie.swa.ase2015.a9902268.task3.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import at.ac.univie.swa.ase2015.a9902268.task3.services.WikiMLGrammarAccess;

}

@parser::members {

 	private WikiMLGrammarAccess grammarAccess;
 	
    public InternalWikiMLParser(TokenStream input, WikiMLGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "WikiPage";	
   	}
   	
   	@Override
   	protected WikiMLGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleWikiPage
entryRuleWikiPage returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getWikiPageRule()); }
	 iv_ruleWikiPage=ruleWikiPage 
	 { $current=$iv_ruleWikiPage.current; } 
	 EOF 
;

// Rule WikiPage
ruleWikiPage returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getWikiPageAccess().getNameHeading1ParserRuleCall_0_0()); 
	    }
		lv_name_0_0=ruleHeading1		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWikiPageRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"Heading1");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getWikiPageAccess().getElementsParagraphTypesParserRuleCall_1_0()); 
	    }
		lv_elements_1_0=ruleParagraphTypes		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWikiPageRule());
	        }
       		add(
       			$current, 
       			"elements",
        		lv_elements_1_0, 
        		"ParagraphTypes");
	        afterParserOrEnumRuleCall();
	    }

)
)*)
;





// Entry rule entryRuleParagraphTypes
entryRuleParagraphTypes returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getParagraphTypesRule()); }
	 iv_ruleParagraphTypes=ruleParagraphTypes 
	 { $current=$iv_ruleParagraphTypes.current; } 
	 EOF 
;

// Rule ParagraphTypes
ruleParagraphTypes returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getParagraphTypesAccess().getOrderListItemLevel1ParserRuleCall_0()); 
    }
    this_OrderListItemLevel1_0=ruleOrderListItemLevel1
    { 
        $current = $this_OrderListItemLevel1_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getParagraphTypesAccess().getUnOrderListItemLevel1ParserRuleCall_1()); 
    }
    this_UnOrderListItemLevel1_1=ruleUnOrderListItemLevel1
    { 
        $current = $this_UnOrderListItemLevel1_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getParagraphTypesAccess().getUnOrderListItemLevel2ParserRuleCall_2()); 
    }
    this_UnOrderListItemLevel2_2=ruleUnOrderListItemLevel2
    { 
        $current = $this_UnOrderListItemLevel2_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getParagraphTypesAccess().getImageParserRuleCall_3()); 
    }
    this_Image_3=ruleImage
    { 
        $current = $this_Image_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getParagraphTypesAccess().getCategoryParserRuleCall_4()); 
    }
    this_Category_4=ruleCategory
    { 
        $current = $this_Category_4.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getParagraphTypesAccess().getTemplateParserRuleCall_5()); 
    }
    this_Template_5=ruleTemplate
    { 
        $current = $this_Template_5.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getParagraphTypesAccess().getAbstractFormattedInlineContentParserRuleCall_6()); 
    }
    this_AbstractFormattedInlineContent_6=ruleAbstractFormattedInlineContent
    { 
        $current = $this_AbstractFormattedInlineContent_6.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getParagraphTypesAccess().getAbstractUnformattedInlineContentParserRuleCall_7()); 
    }
    this_AbstractUnformattedInlineContent_7=ruleAbstractUnformattedInlineContent
    { 
        $current = $this_AbstractUnformattedInlineContent_7.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getParagraphTypesAccess().getBlockQuoteParserRuleCall_8()); 
    }
    this_BlockQuote_8=ruleBlockQuote
    { 
        $current = $this_BlockQuote_8.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getParagraphTypesAccess().getHeading1ParserRuleCall_9()); 
    }
    this_Heading1_9=ruleHeading1
    { 
        $current = $this_Heading1_9.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getParagraphTypesAccess().getHeading2ParserRuleCall_10()); 
    }
    this_Heading2_10=ruleHeading2
    { 
        $current = $this_Heading2_10.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getParagraphTypesAccess().getHeading3ParserRuleCall_11()); 
    }
    this_Heading3_11=ruleHeading3
    { 
        $current = $this_Heading3_11.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getParagraphTypesAccess().getHeading4ParserRuleCall_12()); 
    }
    this_Heading4_12=ruleHeading4
    { 
        $current = $this_Heading4_12.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getParagraphTypesAccess().getHeading5ParserRuleCall_13()); 
    }
    this_Heading5_13=ruleHeading5
    { 
        $current = $this_Heading5_13.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleBlockQuote
entryRuleBlockQuote returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBlockQuoteRule()); }
	 iv_ruleBlockQuote=ruleBlockQuote 
	 { $current=$iv_ruleBlockQuote.current; } 
	 EOF 
;

// Rule BlockQuote
ruleBlockQuote returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getBlockQuoteAccess().getBlockQuoteAction_0(),
            $current);
    }
)	otherlv_1='<blockquote>' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getBlockQuoteAccess().getBlockquoteKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBlockQuoteAccess().getContentAnyTextSequenceParserRuleCall_2_0()); 
	    }
		lv_content_2_0=ruleAnyTextSequence		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBlockQuoteRule());
	        }
       		set(
       			$current, 
       			"content",
        		lv_content_2_0, 
        		"AnyTextSequence");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3='</blockquote>' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getBlockQuoteAccess().getBlockquoteKeyword_3());
    }
)
;





// Entry rule entryRuleTemplate
entryRuleTemplate returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTemplateRule()); }
	 iv_ruleTemplate=ruleTemplate 
	 { $current=$iv_ruleTemplate.current; } 
	 EOF 
;

// Rule Template
ruleTemplate returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='{{' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getTemplateAccess().getLeftCurlyBracketLeftCurlyBracketKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTemplateAccess().getContentTextParserRuleCall_1_0()); 
	    }
		lv_content_1_0=ruleText		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTemplateRule());
	        }
       		add(
       			$current, 
       			"content",
        		lv_content_1_0, 
        		"Text");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_2='|' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getTemplateAccess().getVerticalLineKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTemplateAccess().getContentTextParserRuleCall_2_1_0()); 
	    }
		lv_content_3_0=ruleText		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTemplateRule());
	        }
       		add(
       			$current, 
       			"content",
        		lv_content_3_0, 
        		"Text");
	        afterParserOrEnumRuleCall();
	    }

)
))+	otherlv_4='}}' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getTemplateAccess().getRightCurlyBracketRightCurlyBracketKeyword_3());
    }
)
;





// Entry rule entryRuleUnOrderListItemLevel2
entryRuleUnOrderListItemLevel2 returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getUnOrderListItemLevel2Rule()); }
	 iv_ruleUnOrderListItemLevel2=ruleUnOrderListItemLevel2 
	 { $current=$iv_ruleUnOrderListItemLevel2.current; } 
	 EOF 
;

// Rule UnOrderListItemLevel2
ruleUnOrderListItemLevel2 returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='**' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getUnOrderListItemLevel2Access().getAsteriskAsteriskKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getUnOrderListItemLevel2Access().getNameAnyTextParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleAnyText		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUnOrderListItemLevel2Rule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"AnyText");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getUnOrderListItemLevel2Access().getListAnyTextSequenceParserRuleCall_2_0()); 
	    }
		lv_list_2_0=ruleAnyTextSequence		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUnOrderListItemLevel2Rule());
	        }
       		set(
       			$current, 
       			"list",
        		lv_list_2_0, 
        		"AnyTextSequence");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3=':LIST' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getUnOrderListItemLevel2Access().getLISTKeyword_3());
    }
)
;





// Entry rule entryRuleUnOrderListItemLevel1
entryRuleUnOrderListItemLevel1 returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getUnOrderListItemLevel1Rule()); }
	 iv_ruleUnOrderListItemLevel1=ruleUnOrderListItemLevel1 
	 { $current=$iv_ruleUnOrderListItemLevel1.current; } 
	 EOF 
;

// Rule UnOrderListItemLevel1
ruleUnOrderListItemLevel1 returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='*' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getUnOrderListItemLevel1Access().getAsteriskKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getUnOrderListItemLevel1Access().getNameAnyTextParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleAnyText		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUnOrderListItemLevel1Rule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"AnyText");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getUnOrderListItemLevel1Access().getListAnyTextSequenceParserRuleCall_2_0()); 
	    }
		lv_list_2_0=ruleAnyTextSequence		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUnOrderListItemLevel1Rule());
	        }
       		set(
       			$current, 
       			"list",
        		lv_list_2_0, 
        		"AnyTextSequence");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3=':LIST' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getUnOrderListItemLevel1Access().getLISTKeyword_3());
    }
)
;





// Entry rule entryRuleOrderListItemLevel1
entryRuleOrderListItemLevel1 returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOrderListItemLevel1Rule()); }
	 iv_ruleOrderListItemLevel1=ruleOrderListItemLevel1 
	 { $current=$iv_ruleOrderListItemLevel1.current; } 
	 EOF 
;

// Rule OrderListItemLevel1
ruleOrderListItemLevel1 returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='#' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getOrderListItemLevel1Access().getNumberSignKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOrderListItemLevel1Access().getNameAnyTextParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleAnyText		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOrderListItemLevel1Rule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"AnyText");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getOrderListItemLevel1Access().getListAnyTextSequenceParserRuleCall_2_0()); 
	    }
		lv_list_2_0=ruleAnyTextSequence		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOrderListItemLevel1Rule());
	        }
       		set(
       			$current, 
       			"list",
        		lv_list_2_0, 
        		"AnyTextSequence");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3=':LIST' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getOrderListItemLevel1Access().getLISTKeyword_3());
    }
)
;





// Entry rule entryRuleImage
entryRuleImage returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getImageRule()); }
	 iv_ruleImage=ruleImage 
	 { $current=$iv_ruleImage.current; } 
	 EOF 
;

// Rule Image
ruleImage returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='[[' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getImageAccess().getLeftSquareBracketLeftSquareBracketKeyword_0());
    }
	otherlv_1='File:' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getImageAccess().getFileKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getImageAccess().getNameTextParserRuleCall_2_0()); 
	    }
		lv_name_2_0=ruleText		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getImageRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"Text");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3='|' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getImageAccess().getVerticalLineKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getImageAccess().getTypeViewTypeEnumRuleCall_3_1_0()); 
	    }
		lv_type_4_0=ruleViewType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getImageRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_4_0, 
        		"ViewType");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_5='|' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getImageAccess().getVerticalLineKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getImageAccess().getHAlignHorizontalAlignEnumRuleCall_4_1_0()); 
	    }
		lv_hAlign_6_0=ruleHorizontalAlign		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getImageRule());
	        }
       		set(
       			$current, 
       			"hAlign",
        		lv_hAlign_6_0, 
        		"HorizontalAlign");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_7='|alt=' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getImageAccess().getAltKeyword_5_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getImageAccess().getAltTextAbstractUnformattedInlineContentParserRuleCall_5_1_0()); 
	    }
		lv_altText_8_0=ruleAbstractUnformattedInlineContent		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getImageRule());
	        }
       		set(
       			$current, 
       			"altText",
        		lv_altText_8_0, 
        		"AbstractUnformattedInlineContent");
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_9='|' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getImageAccess().getVerticalLineKeyword_6());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getImageAccess().getCaptionAnyTextSequenceParserRuleCall_7_0()); 
	    }
		lv_caption_10_0=ruleAnyTextSequence		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getImageRule());
	        }
       		set(
       			$current, 
       			"caption",
        		lv_caption_10_0, 
        		"AnyTextSequence");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_11=']]' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getImageAccess().getRightSquareBracketRightSquareBracketKeyword_8());
    }
)
;





// Entry rule entryRuleCategory
entryRuleCategory returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCategoryRule()); }
	 iv_ruleCategory=ruleCategory 
	 { $current=$iv_ruleCategory.current; } 
	 EOF 
;

// Rule Category
ruleCategory returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='[[' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getCategoryAccess().getLeftSquareBracketLeftSquareBracketKeyword_0());
    }
	otherlv_1='Category:' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getCategoryAccess().getCategoryKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCategoryAccess().getNameTextParserRuleCall_2_0()); 
	    }
		lv_name_2_0=ruleText		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCategoryRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"Text");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_value_3_0=	'|*?' 
    {
        newLeafNode(lv_value_3_0, grammarAccess.getCategoryAccess().getValueVerticalLineAsteriskQuestionMarkKeyword_3_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCategoryRule());
	        }
       		setWithLastConsumed($current, "value", lv_value_3_0, "|*?");
	    }

)
)?	otherlv_4=']]' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getCategoryAccess().getRightSquareBracketRightSquareBracketKeyword_4());
    }
)
;





// Entry rule entryRuleHeading1
entryRuleHeading1 returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getHeading1Rule()); }
	 iv_ruleHeading1=ruleHeading1 
	 { $current=$iv_ruleHeading1.current; } 
	 EOF 
;

// Rule Heading1
ruleHeading1 returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='=' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getHeading1Access().getEqualsSignKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getHeading1Access().getHeadingValue1TextParserRuleCall_1_0()); 
	    }
		lv_headingValue1_1_0=ruleText		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getHeading1Rule());
	        }
       		set(
       			$current, 
       			"headingValue1",
        		lv_headingValue1_1_0, 
        		"Text");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='=' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getHeading1Access().getEqualsSignKeyword_2());
    }
)
;





// Entry rule entryRuleHeading2
entryRuleHeading2 returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getHeading2Rule()); }
	 iv_ruleHeading2=ruleHeading2 
	 { $current=$iv_ruleHeading2.current; } 
	 EOF 
;

// Rule Heading2
ruleHeading2 returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='==' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getHeading2Access().getEqualsSignEqualsSignKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getHeading2Access().getHeadingValue2AbstractUnformattedInlineContentParserRuleCall_1_0()); 
	    }
		lv_headingValue2_1_0=ruleAbstractUnformattedInlineContent		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getHeading2Rule());
	        }
       		set(
       			$current, 
       			"headingValue2",
        		lv_headingValue2_1_0, 
        		"AbstractUnformattedInlineContent");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='==' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getHeading2Access().getEqualsSignEqualsSignKeyword_2());
    }
)
;





// Entry rule entryRuleHeading3
entryRuleHeading3 returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getHeading3Rule()); }
	 iv_ruleHeading3=ruleHeading3 
	 { $current=$iv_ruleHeading3.current; } 
	 EOF 
;

// Rule Heading3
ruleHeading3 returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='===' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getHeading3Access().getEqualsSignEqualsSignEqualsSignKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getHeading3Access().getHeadingValue3AbstractUnformattedInlineContentParserRuleCall_1_0()); 
	    }
		lv_headingValue3_1_0=ruleAbstractUnformattedInlineContent		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getHeading3Rule());
	        }
       		set(
       			$current, 
       			"headingValue3",
        		lv_headingValue3_1_0, 
        		"AbstractUnformattedInlineContent");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='===' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getHeading3Access().getEqualsSignEqualsSignEqualsSignKeyword_2());
    }
)
;





// Entry rule entryRuleHeading4
entryRuleHeading4 returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getHeading4Rule()); }
	 iv_ruleHeading4=ruleHeading4 
	 { $current=$iv_ruleHeading4.current; } 
	 EOF 
;

// Rule Heading4
ruleHeading4 returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='====' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getHeading4Access().getEqualsSignEqualsSignEqualsSignEqualsSignKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getHeading4Access().getHeadingValue4AbstractUnformattedInlineContentParserRuleCall_1_0()); 
	    }
		lv_headingValue4_1_0=ruleAbstractUnformattedInlineContent		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getHeading4Rule());
	        }
       		set(
       			$current, 
       			"headingValue4",
        		lv_headingValue4_1_0, 
        		"AbstractUnformattedInlineContent");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='====' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getHeading4Access().getEqualsSignEqualsSignEqualsSignEqualsSignKeyword_2());
    }
)
;





// Entry rule entryRuleHeading5
entryRuleHeading5 returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getHeading5Rule()); }
	 iv_ruleHeading5=ruleHeading5 
	 { $current=$iv_ruleHeading5.current; } 
	 EOF 
;

// Rule Heading5
ruleHeading5 returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='=====' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getHeading5Access().getEqualsSignEqualsSignEqualsSignEqualsSignEqualsSignKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getHeading5Access().getHeadingValue5AbstractUnformattedInlineContentParserRuleCall_1_0()); 
	    }
		lv_headingValue5_1_0=ruleAbstractUnformattedInlineContent		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getHeading5Rule());
	        }
       		set(
       			$current, 
       			"headingValue5",
        		lv_headingValue5_1_0, 
        		"AbstractUnformattedInlineContent");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='=====' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getHeading5Access().getEqualsSignEqualsSignEqualsSignEqualsSignEqualsSignKeyword_2());
    }
)
;





// Entry rule entryRuleAbstractFormattedInlineContent
entryRuleAbstractFormattedInlineContent returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAbstractFormattedInlineContentRule()); }
	 iv_ruleAbstractFormattedInlineContent=ruleAbstractFormattedInlineContent 
	 { $current=$iv_ruleAbstractFormattedInlineContent.current; } 
	 EOF 
;

// Rule AbstractFormattedInlineContent
ruleAbstractFormattedInlineContent returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getAbstractFormattedInlineContentAccess().getBoldParserRuleCall_0()); 
    }
    this_Bold_0=ruleBold
    { 
        $current = $this_Bold_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getAbstractFormattedInlineContentAccess().getItalicParserRuleCall_1()); 
    }
    this_Italic_1=ruleItalic
    { 
        $current = $this_Italic_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getAbstractFormattedInlineContentAccess().getItalicBoldParserRuleCall_2()); 
    }
    this_ItalicBold_2=ruleItalicBold
    { 
        $current = $this_ItalicBold_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleBold
entryRuleBold returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBoldRule()); }
	 iv_ruleBold=ruleBold 
	 { $current=$iv_ruleBold.current; } 
	 EOF 
;

// Rule Bold
ruleBold returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='\'\'\'' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getBoldAccess().getApostropheApostropheApostropheKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBoldAccess().getNameAbstractUnformattedInlineContentParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleAbstractUnformattedInlineContent		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBoldRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"AbstractUnformattedInlineContent");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='\'\'\'' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getBoldAccess().getApostropheApostropheApostropheKeyword_2());
    }
)
;





// Entry rule entryRuleItalic
entryRuleItalic returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getItalicRule()); }
	 iv_ruleItalic=ruleItalic 
	 { $current=$iv_ruleItalic.current; } 
	 EOF 
;

// Rule Italic
ruleItalic returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='\'\'' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getItalicAccess().getApostropheApostropheKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getItalicAccess().getNameAbstractUnformattedInlineContentParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleAbstractUnformattedInlineContent		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getItalicRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"AbstractUnformattedInlineContent");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='\'\'' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getItalicAccess().getApostropheApostropheKeyword_2());
    }
)
;





// Entry rule entryRuleItalicBold
entryRuleItalicBold returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getItalicBoldRule()); }
	 iv_ruleItalicBold=ruleItalicBold 
	 { $current=$iv_ruleItalicBold.current; } 
	 EOF 
;

// Rule ItalicBold
ruleItalicBold returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='\'\'\'\'\'' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getItalicBoldAccess().getApostropheApostropheApostropheApostropheApostropheKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getItalicBoldAccess().getNameAbstractUnformattedInlineContentParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleAbstractUnformattedInlineContent		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getItalicBoldRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"AbstractUnformattedInlineContent");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='\'\'\'\'\'' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getItalicBoldAccess().getApostropheApostropheApostropheApostropheApostropheKeyword_2());
    }
)
;





// Entry rule entryRuleAbstractUnformattedInlineContent
entryRuleAbstractUnformattedInlineContent returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAbstractUnformattedInlineContentRule()); }
	 iv_ruleAbstractUnformattedInlineContent=ruleAbstractUnformattedInlineContent 
	 { $current=$iv_ruleAbstractUnformattedInlineContent.current; } 
	 EOF 
;

// Rule AbstractUnformattedInlineContent
ruleAbstractUnformattedInlineContent returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getAbstractUnformattedInlineContentAccess().getTextParserRuleCall_0()); 
    }
    this_Text_0=ruleText
    { 
        $current = $this_Text_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getAbstractUnformattedInlineContentAccess().getHyperLinkParserRuleCall_1()); 
    }
    this_HyperLink_1=ruleHyperLink
    { 
        $current = $this_HyperLink_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleText
entryRuleText returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTextRule()); }
	 iv_ruleText=ruleText 
	 { $current=$iv_ruleText.current; } 
	 EOF 
;

// Rule Text
ruleText returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{ 
	        newCompositeNode(grammarAccess.getTextAccess().getNameNameParserRuleCall_0()); 
	    }
		lv_name_0_0=ruleName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTextRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"Name");
	        afterParserOrEnumRuleCall();
	    }

)
)
;





// Entry rule entryRuleHyperLink
entryRuleHyperLink returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getHyperLinkRule()); }
	 iv_ruleHyperLink=ruleHyperLink 
	 { $current=$iv_ruleHyperLink.current; } 
	 EOF 
;

// Rule HyperLink
ruleHyperLink returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getHyperLinkAccess().getInternalParserRuleCall_0()); 
    }
    this_Internal_0=ruleInternal
    { 
        $current = $this_Internal_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getHyperLinkAccess().getInternalAltParserRuleCall_1()); 
    }
    this_InternalAlt_1=ruleInternalAlt
    { 
        $current = $this_InternalAlt_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getHyperLinkAccess().getExternalParserRuleCall_2()); 
    }
    this_External_2=ruleExternal
    { 
        $current = $this_External_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getHyperLinkAccess().getExternalAltParserRuleCall_3()); 
    }
    this_ExternalAlt_3=ruleExternalAlt
    { 
        $current = $this_ExternalAlt_3.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleInternal
entryRuleInternal returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInternalRule()); }
	 iv_ruleInternal=ruleInternal 
	 { $current=$iv_ruleInternal.current; } 
	 EOF 
;

// Rule Internal
ruleInternal returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='[[' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getInternalAccess().getLeftSquareBracketLeftSquareBracketKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInternalAccess().getNameTextParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleText		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInternalRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"Text");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2=']]' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getInternalAccess().getRightSquareBracketRightSquareBracketKeyword_2());
    }
)
;





// Entry rule entryRuleInternalAlt
entryRuleInternalAlt returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInternalAltRule()); }
	 iv_ruleInternalAlt=ruleInternalAlt 
	 { $current=$iv_ruleInternalAlt.current; } 
	 EOF 
;

// Rule InternalAlt
ruleInternalAlt returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='[[' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getInternalAltAccess().getLeftSquareBracketLeftSquareBracketKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInternalAltAccess().getNameTextParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleText		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInternalAltRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"Text");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='|' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getInternalAltAccess().getVerticalLineKeyword_2());
    }
(
(
(
		{ 
	        newCompositeNode(grammarAccess.getInternalAltAccess().getAltTextAbstractUnformattedInlineContentParserRuleCall_3_0_0()); 
	    }
		lv_altText_3_1=ruleAbstractUnformattedInlineContent		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInternalAltRule());
	        }
       		set(
       			$current, 
       			"altText",
        		lv_altText_3_1, 
        		"AbstractUnformattedInlineContent");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getInternalAltAccess().getAltTextAbstractFormattedInlineContentParserRuleCall_3_0_1()); 
	    }
		lv_altText_3_2=ruleAbstractFormattedInlineContent		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInternalAltRule());
	        }
       		set(
       			$current, 
       			"altText",
        		lv_altText_3_2, 
        		"AbstractFormattedInlineContent");
	        afterParserOrEnumRuleCall();
	    }

)

)
)	otherlv_4=']]' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getInternalAltAccess().getRightSquareBracketRightSquareBracketKeyword_4());
    }
)
;





// Entry rule entryRuleExternal
entryRuleExternal returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getExternalRule()); }
	 iv_ruleExternal=ruleExternal 
	 { $current=$iv_ruleExternal.current; } 
	 EOF 
;

// Rule External
ruleExternal returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='[' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getExternalAccess().getLeftSquareBracketKeyword_0());
    }
(
(
		lv_name_1_0=RULE_URL
		{
			newLeafNode(lv_name_1_0, grammarAccess.getExternalAccess().getNameURLTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getExternalRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"URL");
	    }

)
)	otherlv_2=']' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getExternalAccess().getRightSquareBracketKeyword_2());
    }
)
;





// Entry rule entryRuleExternalAlt
entryRuleExternalAlt returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getExternalAltRule()); }
	 iv_ruleExternalAlt=ruleExternalAlt 
	 { $current=$iv_ruleExternalAlt.current; } 
	 EOF 
;

// Rule ExternalAlt
ruleExternalAlt returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='[' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getExternalAltAccess().getLeftSquareBracketKeyword_0());
    }
(
(
		lv_name_1_0=RULE_URL
		{
			newLeafNode(lv_name_1_0, grammarAccess.getExternalAltAccess().getNameURLTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getExternalAltRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"URL");
	    }

)
)(
(
(
		{ 
	        newCompositeNode(grammarAccess.getExternalAltAccess().getAltTextAbstractUnformattedInlineContentParserRuleCall_2_0_0()); 
	    }
		lv_altText_2_1=ruleAbstractUnformattedInlineContent		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExternalAltRule());
	        }
       		set(
       			$current, 
       			"altText",
        		lv_altText_2_1, 
        		"AbstractUnformattedInlineContent");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getExternalAltAccess().getAltTextAbstractFormattedInlineContentParserRuleCall_2_0_1()); 
	    }
		lv_altText_2_2=ruleAbstractFormattedInlineContent		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExternalAltRule());
	        }
       		set(
       			$current, 
       			"altText",
        		lv_altText_2_2, 
        		"AbstractFormattedInlineContent");
	        afterParserOrEnumRuleCall();
	    }

)

)
)	otherlv_3=']' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getExternalAltAccess().getRightSquareBracketKeyword_3());
    }
)
;





// Entry rule entryRuleAnyTextSequence
entryRuleAnyTextSequence returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAnyTextSequenceRule()); }
	 iv_ruleAnyTextSequence=ruleAnyTextSequence 
	 { $current=$iv_ruleAnyTextSequence.current; } 
	 EOF 
;

// Rule AnyTextSequence
ruleAnyTextSequence returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getAnyTextSequenceAccess().getAnyTextSequenceAction_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getAnyTextSequenceAccess().getContentAnyTextParserRuleCall_1_0()); 
	    }
		lv_content_1_0=ruleAnyText		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAnyTextSequenceRule());
	        }
       		add(
       			$current, 
       			"content",
        		lv_content_1_0, 
        		"AnyText");
	        afterParserOrEnumRuleCall();
	    }

)
)*)
;





// Entry rule entryRuleAnyText
entryRuleAnyText returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAnyTextRule()); }
	 iv_ruleAnyText=ruleAnyText 
	 { $current=$iv_ruleAnyText.current; } 
	 EOF 
;

// Rule AnyText
ruleAnyText returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
(
		{ 
	        newCompositeNode(grammarAccess.getAnyTextAccess().getNameAbstractFormattedInlineContentParserRuleCall_0_0()); 
	    }
		lv_name_0_1=ruleAbstractFormattedInlineContent		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAnyTextRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_0_1, 
        		"AbstractFormattedInlineContent");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getAnyTextAccess().getNameAbstractUnformattedInlineContentParserRuleCall_0_1()); 
	    }
		lv_name_0_2=ruleAbstractUnformattedInlineContent		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAnyTextRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_0_2, 
        		"AbstractUnformattedInlineContent");
	        afterParserOrEnumRuleCall();
	    }

)

)
)
;





// Entry rule entryRuleName
entryRuleName returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getNameRule()); } 
	 iv_ruleName=ruleName 
	 { $current=$iv_ruleName.current.getText(); }  
	 EOF 
;

// Rule Name
ruleName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_ID_0=RULE_ID    {
		$current.merge(this_ID_0);
    }

    { 
    newLeafNode(this_ID_0, grammarAccess.getNameAccess().getIDTerminalRuleCall_0()); 
    }
(    this_ID_1=RULE_ID    {
		$current.merge(this_ID_1);
    }

    { 
    newLeafNode(this_ID_1, grammarAccess.getNameAccess().getIDTerminalRuleCall_1()); 
    }
)*)
    ;





// Rule ViewType
ruleViewType returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='thumb' 
	{
        $current = grammarAccess.getViewTypeAccess().getThumbEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getViewTypeAccess().getThumbEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='thumbnail' 
	{
        $current = grammarAccess.getViewTypeAccess().getThumbnailEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getViewTypeAccess().getThumbnailEnumLiteralDeclaration_1()); 
    }
)
    |(	enumLiteral_2='frame' 
	{
        $current = grammarAccess.getViewTypeAccess().getFrameEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getViewTypeAccess().getFrameEnumLiteralDeclaration_2()); 
    }
)
    |(	enumLiteral_3='framed' 
	{
        $current = grammarAccess.getViewTypeAccess().getFramedEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_3, grammarAccess.getViewTypeAccess().getFramedEnumLiteralDeclaration_3()); 
    }
)
    |(	enumLiteral_4='frameless' 
	{
        $current = grammarAccess.getViewTypeAccess().getFramelessEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_4, grammarAccess.getViewTypeAccess().getFramelessEnumLiteralDeclaration_4()); 
    }
));



// Rule HorizontalAlign
ruleHorizontalAlign returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='right' 
	{
        $current = grammarAccess.getHorizontalAlignAccess().getRightEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getHorizontalAlignAccess().getRightEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='left' 
	{
        $current = grammarAccess.getHorizontalAlignAccess().getLeftEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getHorizontalAlignAccess().getLeftEnumLiteralDeclaration_1()); 
    }
)
    |(	enumLiteral_2='center' 
	{
        $current = grammarAccess.getHorizontalAlignAccess().getCenterEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getHorizontalAlignAccess().getCenterEnumLiteralDeclaration_2()); 
    }
)
    |(	enumLiteral_3='none' 
	{
        $current = grammarAccess.getHorizontalAlignAccess().getNoneEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_3, grammarAccess.getHorizontalAlignAccess().getNoneEnumLiteralDeclaration_3()); 
    }
));



RULE_ID : ('A'..'Z'|'a'..'z'|'_'|'-'|'('|')'|','|'#'|'"'|'.'|':'|'0'..'9')*;

RULE_ML_COMMENT : '<!--' ( options {greedy=false;} : . )*'-->';

RULE_STRING : ('A'..'Z'|'a'..'z'|'_'|'-'|'('|')'|','|'#'|'"'|'.'|':'|'0'..'9')*;

RULE_URL : ('a'..'z')+ '://' (('0'..'9')+ '.' ('0'..'9')+ '.' ('0'..'9')+ '.' ('0'..'9')+|('a'..'z'|'A'..'Z') ('a'..'z'|'A'..'Z'|'0'..'9'|'$'|'-'|'_'|'\\' ('0'..'9'|'a'..'f'|'A'..'F') ('0'..'9'|'a'..'f'|'A'..'F')|'%' '0'..'9' '0'..'9')* ('.' ('a'..'z'|'A'..'Z') ('a'..'z'|'A'..'Z'|'0'..'9'|'$'|'-'|'_'|'\\' ('0'..'9'|'a'..'f'|'A'..'F') ('0'..'9'|'a'..'f'|'A'..'F')|'%' '0'..'9' '0'..'9')*)*) (':' ('0'..'9')+)? ('/' ('a'..'z'|'A'..'Z'|'0'..'9'|'$'|'-'|'_'|'~'|'+'|'.'|'\\' ('0'..'9'|'a'..'f'|'A'..'F') ('0'..'9'|'a'..'f'|'A'..'F')|'%' '0'..'9' '0'..'9')*)* ('?' ('a'..'z'|'A'..'Z'|'0'..'9'|'$'|'-'|'_'|'='|'&'|';'|'\\' ('0'..'9'|'a'..'f'|'A'..'F') ('0'..'9'|'a'..'f'|'A'..'F')|'%' '0'..'9' '0'..'9')+ ('+' ('a'..'z'|'A'..'Z'|'0'..'9'|'$'|'-'|'_'|'='|'&'|';'|'\\' ('0'..'9'|'a'..'f'|'A'..'F') ('0'..'9'|'a'..'f'|'A'..'F')|'%' '0'..'9' '0'..'9')+)*)?;

RULE_INT : ('0'..'9')+;

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


