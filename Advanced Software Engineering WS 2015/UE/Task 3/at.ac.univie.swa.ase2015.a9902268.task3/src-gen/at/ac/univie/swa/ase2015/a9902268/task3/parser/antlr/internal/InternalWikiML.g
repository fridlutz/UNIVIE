/*
 * generated by Xtext
 */
grammar InternalWikiML;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package at.ac.univie.swa.ase2015.a9902268.task3.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package at.ac.univie.swa.ase2015.a9902268.task3.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import at.ac.univie.swa.ase2015.a9902268.task3.services.WikiMLGrammarAccess;

}

@parser::members {

 	private WikiMLGrammarAccess grammarAccess;
 	
    public InternalWikiMLParser(TokenStream input, WikiMLGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "WikiMLPage";	
   	}
   	
   	@Override
   	protected WikiMLGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleWikiMLPage
entryRuleWikiMLPage returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getWikiMLPageRule()); }
	 iv_ruleWikiMLPage=ruleWikiMLPage 
	 { $current=$iv_ruleWikiMLPage.current; } 
	 EOF 
;

// Rule WikiMLPage
ruleWikiMLPage returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getWikiMLPageAccess().getTitlePageTitleParserRuleCall_0_0()); 
	    }
		lv_title_0_0=rulePageTitle		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWikiMLPageRule());
	        }
       		add(
       			$current, 
       			"title",
        		lv_title_0_0, 
        		"PageTitle");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getWikiMLPageAccess().getSectionAbstractSectionParserRuleCall_1_0()); 
	    }
		lv_section_1_0=ruleAbstractSection		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWikiMLPageRule());
	        }
       		add(
       			$current, 
       			"section",
        		lv_section_1_0, 
        		"AbstractSection");
	        afterParserOrEnumRuleCall();
	    }

)
)*)
;





// Entry rule entryRulePageTitle
entryRulePageTitle returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPageTitleRule()); }
	 iv_rulePageTitle=rulePageTitle 
	 { $current=$iv_rulePageTitle.current; } 
	 EOF 
;

// Rule PageTitle
rulePageTitle returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='=' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getPageTitleAccess().getEqualsSignKeyword_0());
    }
(
(
		lv_name_1_0=RULE_TEXT
		{
			newLeafNode(lv_name_1_0, grammarAccess.getPageTitleAccess().getNameTEXTTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPageTitleRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"TEXT");
	    }

)
)	otherlv_2='=\n' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getPageTitleAccess().getEqualsSignControl000aKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPageTitleAccess().getContentAbstractParagraphParserRuleCall_3_0()); 
	    }
		lv_content_3_0=ruleAbstractParagraph		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPageTitleRule());
	        }
       		add(
       			$current, 
       			"content",
        		lv_content_3_0, 
        		"AbstractParagraph");
	        afterParserOrEnumRuleCall();
	    }

)
)*)
;





// Entry rule entryRuleAbstractSection
entryRuleAbstractSection returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAbstractSectionRule()); }
	 iv_ruleAbstractSection=ruleAbstractSection 
	 { $current=$iv_ruleAbstractSection.current; } 
	 EOF 
;

// Rule AbstractSection
ruleAbstractSection returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getAbstractSectionAccess().getSubSectionParserRuleCall_0()); 
    }
    this_SubSection_0=ruleSubSection
    { 
        $current = $this_SubSection_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getAbstractSectionAccess().getSubSubSectionParserRuleCall_1()); 
    }
    this_SubSubSection_1=ruleSubSubSection
    { 
        $current = $this_SubSubSection_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getAbstractSectionAccess().getSubSubSubSectionParserRuleCall_2()); 
    }
    this_SubSubSubSection_2=ruleSubSubSubSection
    { 
        $current = $this_SubSubSubSection_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleSubSection
entryRuleSubSection returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSubSectionRule()); }
	 iv_ruleSubSection=ruleSubSection 
	 { $current=$iv_ruleSubSection.current; } 
	 EOF 
;

// Rule SubSection
ruleSubSection returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='==' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSubSectionAccess().getEqualsSignEqualsSignKeyword_0());
    }
(
(
		lv_name_1_0=RULE_TEXT
		{
			newLeafNode(lv_name_1_0, grammarAccess.getSubSectionAccess().getNameTEXTTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSubSectionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"TEXT");
	    }

)
)	otherlv_2='==\n' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getSubSectionAccess().getEqualsSignEqualsSignControl000aKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSubSectionAccess().getContentAbstractParagraphParserRuleCall_3_0()); 
	    }
		lv_content_3_0=ruleAbstractParagraph		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSubSectionRule());
	        }
       		add(
       			$current, 
       			"content",
        		lv_content_3_0, 
        		"AbstractParagraph");
	        afterParserOrEnumRuleCall();
	    }

)
)*)
;





// Entry rule entryRuleSubSubSection
entryRuleSubSubSection returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSubSubSectionRule()); }
	 iv_ruleSubSubSection=ruleSubSubSection 
	 { $current=$iv_ruleSubSubSection.current; } 
	 EOF 
;

// Rule SubSubSection
ruleSubSubSection returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='===' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSubSubSectionAccess().getEqualsSignEqualsSignEqualsSignKeyword_0());
    }
(
(
		lv_name_1_0=RULE_TEXT
		{
			newLeafNode(lv_name_1_0, grammarAccess.getSubSubSectionAccess().getNameTEXTTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSubSubSectionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"TEXT");
	    }

)
)	otherlv_2='===\n' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getSubSubSectionAccess().getEqualsSignEqualsSignEqualsSignControl000aKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSubSubSectionAccess().getContentAbstractParagraphParserRuleCall_3_0()); 
	    }
		lv_content_3_0=ruleAbstractParagraph		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSubSubSectionRule());
	        }
       		add(
       			$current, 
       			"content",
        		lv_content_3_0, 
        		"AbstractParagraph");
	        afterParserOrEnumRuleCall();
	    }

)
)*)
;





// Entry rule entryRuleSubSubSubSection
entryRuleSubSubSubSection returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSubSubSubSectionRule()); }
	 iv_ruleSubSubSubSection=ruleSubSubSubSection 
	 { $current=$iv_ruleSubSubSubSection.current; } 
	 EOF 
;

// Rule SubSubSubSection
ruleSubSubSubSection returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='====' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSubSubSubSectionAccess().getEqualsSignEqualsSignEqualsSignEqualsSignKeyword_0());
    }
(
(
		lv_name_1_0=RULE_TEXT
		{
			newLeafNode(lv_name_1_0, grammarAccess.getSubSubSubSectionAccess().getNameTEXTTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSubSubSubSectionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"TEXT");
	    }

)
)	otherlv_2='====\n' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getSubSubSubSectionAccess().getEqualsSignEqualsSignEqualsSignEqualsSignControl000aKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSubSubSubSectionAccess().getContentAbstractParagraphParserRuleCall_3_0()); 
	    }
		lv_content_3_0=ruleAbstractParagraph		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSubSubSubSectionRule());
	        }
       		add(
       			$current, 
       			"content",
        		lv_content_3_0, 
        		"AbstractParagraph");
	        afterParserOrEnumRuleCall();
	    }

)
)*)
;





// Entry rule entryRuleAbstractParagraph
entryRuleAbstractParagraph returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAbstractParagraphRule()); }
	 iv_ruleAbstractParagraph=ruleAbstractParagraph 
	 { $current=$iv_ruleAbstractParagraph.current; } 
	 EOF 
;

// Rule AbstractParagraph
ruleAbstractParagraph returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getAbstractParagraphAccess().getNormalParagraphParserRuleCall_0()); 
    }
    this_NormalParagraph_0=ruleNormalParagraph
    { 
        $current = $this_NormalParagraph_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getAbstractParagraphAccess().getBoldParagraphParserRuleCall_1()); 
    }
    this_BoldParagraph_1=ruleBoldParagraph
    { 
        $current = $this_BoldParagraph_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getAbstractParagraphAccess().getItalicParagraphParserRuleCall_2()); 
    }
    this_ItalicParagraph_2=ruleItalicParagraph
    { 
        $current = $this_ItalicParagraph_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleNormalParagraph
entryRuleNormalParagraph returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getNormalParagraphRule()); }
	 iv_ruleNormalParagraph=ruleNormalParagraph 
	 { $current=$iv_ruleNormalParagraph.current; } 
	 EOF 
;

// Rule NormalParagraph
ruleNormalParagraph returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_name_0_0=RULE_TEXT
		{
			newLeafNode(lv_name_0_0, grammarAccess.getNormalParagraphAccess().getNameTEXTTerminalRuleCall_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getNormalParagraphRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"TEXT");
	    }

)
)
;





// Entry rule entryRuleBoldParagraph
entryRuleBoldParagraph returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBoldParagraphRule()); }
	 iv_ruleBoldParagraph=ruleBoldParagraph 
	 { $current=$iv_ruleBoldParagraph.current; } 
	 EOF 
;

// Rule BoldParagraph
ruleBoldParagraph returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='\'\'\'' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getBoldParagraphAccess().getApostropheApostropheApostropheKeyword_0());
    }

    { 
        newCompositeNode(grammarAccess.getBoldParagraphAccess().getNormalParagraphParserRuleCall_1()); 
    }
    this_NormalParagraph_1=ruleNormalParagraph
    { 
        $current = $this_NormalParagraph_1.current; 
        afterParserOrEnumRuleCall();
    }
	otherlv_2='\'\'\'' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getBoldParagraphAccess().getApostropheApostropheApostropheKeyword_2());
    }
)
;





// Entry rule entryRuleItalicParagraph
entryRuleItalicParagraph returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getItalicParagraphRule()); }
	 iv_ruleItalicParagraph=ruleItalicParagraph 
	 { $current=$iv_ruleItalicParagraph.current; } 
	 EOF 
;

// Rule ItalicParagraph
ruleItalicParagraph returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='\'\'' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getItalicParagraphAccess().getApostropheApostropheKeyword_0());
    }

    { 
        newCompositeNode(grammarAccess.getItalicParagraphAccess().getNormalParagraphParserRuleCall_1()); 
    }
    this_NormalParagraph_1=ruleNormalParagraph
    { 
        $current = $this_NormalParagraph_1.current; 
        afterParserOrEnumRuleCall();
    }
	otherlv_2='\'\'' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getItalicParagraphAccess().getApostropheApostropheKeyword_2());
    }
)
;





RULE_TEXT : '^'? ('a'..'z'|'A'..'Z'|'_'|'0'..'9'|' ')*;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


