/*
 * generated by Xtext
 */
grammar InternalWikiML;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package at.ac.univie.swa.ase2015.a9902268.task3.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package at.ac.univie.swa.ase2015.a9902268.task3.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import at.ac.univie.swa.ase2015.a9902268.task3.services.WikiMLGrammarAccess;

}

@parser::members {

 	private WikiMLGrammarAccess grammarAccess;
 	
    public InternalWikiMLParser(TokenStream input, WikiMLGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "wikipage";	
   	}
   	
   	@Override
   	protected WikiMLGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRulewikipage
entryRulewikipage returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getWikipageRule()); }
	 iv_rulewikipage=rulewikipage 
	 { $current=$iv_rulewikipage.current; } 
	 EOF 
;

// Rule wikipage
rulewikipage returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='title' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getWikipageAccess().getTitleKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getWikipageAccess().getNameInlineContentParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleInlineContent		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWikipageRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"InlineContent");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='title\n' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getWikipageAccess().getTitleKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getWikipageAccess().getContentInlineContentParserRuleCall_3_0()); 
	    }
		lv_content_3_0=ruleInlineContent		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWikipageRule());
	        }
       		add(
       			$current, 
       			"content",
        		lv_content_3_0, 
        		"InlineContent");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getWikipageAccess().getSectionsAbstractSectionParserRuleCall_4_0()); 
	    }
		lv_sections_4_0=ruleAbstractSection		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWikipageRule());
	        }
       		add(
       			$current, 
       			"sections",
        		lv_sections_4_0, 
        		"AbstractSection");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getWikipageAccess().getAbstractSectionsAbstractSectionParserRuleCall_5_0()); 
	    }
		lv_AbstractSections_5_0=ruleAbstractSection		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWikipageRule());
	        }
       		add(
       			$current, 
       			"AbstractSections",
        		lv_AbstractSections_5_0, 
        		"AbstractSection");
	        afterParserOrEnumRuleCall();
	    }

)
)*)
;





// Entry rule entryRuleAbstractSection
entryRuleAbstractSection returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAbstractSectionRule()); }
	 iv_ruleAbstractSection=ruleAbstractSection 
	 { $current=$iv_ruleAbstractSection.current; } 
	 EOF 
;

// Rule AbstractSection
ruleAbstractSection returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getAbstractSectionAccess().getSubsectionLevel1ParserRuleCall_0()); 
    }
    this_SubsectionLevel1_0=ruleSubsectionLevel1
    { 
        $current = $this_SubsectionLevel1_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getAbstractSectionAccess().getSubsectionLevel2ParserRuleCall_1()); 
    }
    this_SubsectionLevel2_1=ruleSubsectionLevel2
    { 
        $current = $this_SubsectionLevel2_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getAbstractSectionAccess().getSubsectionLevel3ParserRuleCall_2()); 
    }
    this_SubsectionLevel3_2=ruleSubsectionLevel3
    { 
        $current = $this_SubsectionLevel3_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getAbstractSectionAccess().getSubsectionLevel4ParserRuleCall_3()); 
    }
    this_SubsectionLevel4_3=ruleSubsectionLevel4
    { 
        $current = $this_SubsectionLevel4_3.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleSubsectionLevel1
entryRuleSubsectionLevel1 returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSubsectionLevel1Rule()); }
	 iv_ruleSubsectionLevel1=ruleSubsectionLevel1 
	 { $current=$iv_ruleSubsectionLevel1.current; } 
	 EOF 
;

// Rule SubsectionLevel1
ruleSubsectionLevel1 returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='section1' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSubsectionLevel1Access().getSection1Keyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSubsectionLevel1Access().getNameInlineContentParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleInlineContent		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSubsectionLevel1Rule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"InlineContent");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='section1\n' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getSubsectionLevel1Access().getSection1Keyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSubsectionLevel1Access().getContentInlineContentParserRuleCall_3_0()); 
	    }
		lv_content_3_0=ruleInlineContent		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSubsectionLevel1Rule());
	        }
       		set(
       			$current, 
       			"content",
        		lv_content_3_0, 
        		"InlineContent");
	        afterParserOrEnumRuleCall();
	    }

)
)?)
;





// Entry rule entryRuleSubsectionLevel2
entryRuleSubsectionLevel2 returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSubsectionLevel2Rule()); }
	 iv_ruleSubsectionLevel2=ruleSubsectionLevel2 
	 { $current=$iv_ruleSubsectionLevel2.current; } 
	 EOF 
;

// Rule SubsectionLevel2
ruleSubsectionLevel2 returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='section2' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSubsectionLevel2Access().getSection2Keyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSubsectionLevel2Access().getNameInlineContentParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleInlineContent		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSubsectionLevel2Rule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"InlineContent");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='section2\n' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getSubsectionLevel2Access().getSection2Keyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSubsectionLevel2Access().getContentInlineContentParserRuleCall_3_0()); 
	    }
		lv_content_3_0=ruleInlineContent		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSubsectionLevel2Rule());
	        }
       		set(
       			$current, 
       			"content",
        		lv_content_3_0, 
        		"InlineContent");
	        afterParserOrEnumRuleCall();
	    }

)
)?)
;





// Entry rule entryRuleSubsectionLevel3
entryRuleSubsectionLevel3 returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSubsectionLevel3Rule()); }
	 iv_ruleSubsectionLevel3=ruleSubsectionLevel3 
	 { $current=$iv_ruleSubsectionLevel3.current; } 
	 EOF 
;

// Rule SubsectionLevel3
ruleSubsectionLevel3 returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='section3' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSubsectionLevel3Access().getSection3Keyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSubsectionLevel3Access().getNameInlineContentParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleInlineContent		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSubsectionLevel3Rule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"InlineContent");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='section3\n' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getSubsectionLevel3Access().getSection3Keyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSubsectionLevel3Access().getContentInlineContentParserRuleCall_3_0()); 
	    }
		lv_content_3_0=ruleInlineContent		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSubsectionLevel3Rule());
	        }
       		set(
       			$current, 
       			"content",
        		lv_content_3_0, 
        		"InlineContent");
	        afterParserOrEnumRuleCall();
	    }

)
)?)
;





// Entry rule entryRuleSubsectionLevel4
entryRuleSubsectionLevel4 returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSubsectionLevel4Rule()); }
	 iv_ruleSubsectionLevel4=ruleSubsectionLevel4 
	 { $current=$iv_ruleSubsectionLevel4.current; } 
	 EOF 
;

// Rule SubsectionLevel4
ruleSubsectionLevel4 returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='section4' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSubsectionLevel4Access().getSection4Keyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSubsectionLevel4Access().getNameInlineContentParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleInlineContent		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSubsectionLevel4Rule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"InlineContent");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='section4\n' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getSubsectionLevel4Access().getSection4Keyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSubsectionLevel4Access().getContentInlineContentParserRuleCall_3_0()); 
	    }
		lv_content_3_0=ruleInlineContent		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSubsectionLevel4Rule());
	        }
       		set(
       			$current, 
       			"content",
        		lv_content_3_0, 
        		"InlineContent");
	        afterParserOrEnumRuleCall();
	    }

)
)?)
;





// Entry rule entryRuleInlineContent
entryRuleInlineContent returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getInlineContentRule()); } 
	 iv_ruleInlineContent=ruleInlineContent 
	 { $current=$iv_ruleInlineContent.current.getText(); }  
	 EOF 
;

// Rule InlineContent
ruleInlineContent returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_ID_0=RULE_ID    {
		$current.merge(this_ID_0);
    }

    { 
    newLeafNode(this_ID_0, grammarAccess.getInlineContentAccess().getIDTerminalRuleCall_0()); 
    }
(    this_ID_1=RULE_ID    {
		$current.merge(this_ID_1);
    }

    { 
    newLeafNode(this_ID_1, grammarAccess.getInlineContentAccess().getIDTerminalRuleCall_1()); 
    }
)*)
    ;





RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


