/*
 * generated by Xtext
 */
grammar InternalWikiML;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package at.ac.univie.swa.ase2015.a9902268.task3.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package at.ac.univie.swa.ase2015.a9902268.task3.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import at.ac.univie.swa.ase2015.a9902268.task3.services.WikiMLGrammarAccess;

}

@parser::members {

 	private WikiMLGrammarAccess grammarAccess;
 	
    public InternalWikiMLParser(TokenStream input, WikiMLGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "wikipage";	
   	}
   	
   	@Override
   	protected WikiMLGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRulewikipage
entryRulewikipage returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getWikipageRule()); }
	 iv_rulewikipage=rulewikipage 
	 { $current=$iv_rulewikipage.current; } 
	 EOF 
;

// Rule wikipage
rulewikipage returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='=' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getWikipageAccess().getEqualsSignKeyword_0());
    }
(
(
		lv_title_1_0=RULE_WIKITEXT
		{
			newLeafNode(lv_title_1_0, grammarAccess.getWikipageAccess().getTitleWIKITEXTTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getWikipageRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"title",
        		lv_title_1_0, 
        		"WIKITEXT");
	    }

)
)(this_WIKITEXT_2=RULE_WIKITEXT
    { 
    newLeafNode(this_WIKITEXT_2, grammarAccess.getWikipageAccess().getWIKITEXTTerminalRuleCall_2()); 
    }
)*	otherlv_3='=' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getWikipageAccess().getEqualsSignKeyword_3());
    }
	otherlv_4='\n' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getWikipageAccess().getControl000aKeyword_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getWikipageAccess().getContentInlineContentParserRuleCall_5_0()); 
	    }
		lv_content_5_0=ruleInlineContent		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWikipageRule());
	        }
       		add(
       			$current, 
       			"content",
        		lv_content_5_0, 
        		"InlineContent");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getWikipageAccess().getSectionsAbstractSectionParserRuleCall_6_0()); 
	    }
		lv_sections_6_0=ruleAbstractSection		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWikipageRule());
	        }
       		add(
       			$current, 
       			"sections",
        		lv_sections_6_0, 
        		"AbstractSection");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getWikipageAccess().getSectionsAbstractSectionParserRuleCall_7_0()); 
	    }
		lv_sections_7_0=ruleAbstractSection		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWikipageRule());
	        }
       		add(
       			$current, 
       			"sections",
        		lv_sections_7_0, 
        		"AbstractSection");
	        afterParserOrEnumRuleCall();
	    }

)
)*)
;





// Entry rule entryRuleAbstractSection
entryRuleAbstractSection returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAbstractSectionRule()); }
	 iv_ruleAbstractSection=ruleAbstractSection 
	 { $current=$iv_ruleAbstractSection.current; } 
	 EOF 
;

// Rule AbstractSection
ruleAbstractSection returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getAbstractSectionAccess().getSubsectionLevel1ParserRuleCall_0()); 
    }
    this_SubsectionLevel1_0=ruleSubsectionLevel1
    { 
        $current = $this_SubsectionLevel1_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getAbstractSectionAccess().getSubsectionLevel2ParserRuleCall_1()); 
    }
    this_SubsectionLevel2_1=ruleSubsectionLevel2
    { 
        $current = $this_SubsectionLevel2_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getAbstractSectionAccess().getSubsectionLevel3ParserRuleCall_2()); 
    }
    this_SubsectionLevel3_2=ruleSubsectionLevel3
    { 
        $current = $this_SubsectionLevel3_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getAbstractSectionAccess().getSubsectionLevel4ParserRuleCall_3()); 
    }
    this_SubsectionLevel4_3=ruleSubsectionLevel4
    { 
        $current = $this_SubsectionLevel4_3.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleSubsectionLevel1
entryRuleSubsectionLevel1 returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSubsectionLevel1Rule()); }
	 iv_ruleSubsectionLevel1=ruleSubsectionLevel1 
	 { $current=$iv_ruleSubsectionLevel1.current; } 
	 EOF 
;

// Rule SubsectionLevel1
ruleSubsectionLevel1 returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='==' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSubsectionLevel1Access().getEqualsSignEqualsSignKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSubsectionLevel1Access().getNameTextParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleText		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSubsectionLevel1Rule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"Text");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='==' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getSubsectionLevel1Access().getEqualsSignEqualsSignKeyword_2());
    }
	otherlv_3='\n' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getSubsectionLevel1Access().getControl000aKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSubsectionLevel1Access().getContentInlineContentParserRuleCall_4_0()); 
	    }
		lv_content_4_0=ruleInlineContent		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSubsectionLevel1Rule());
	        }
       		add(
       			$current, 
       			"content",
        		lv_content_4_0, 
        		"InlineContent");
	        afterParserOrEnumRuleCall();
	    }

)
)*)
;





// Entry rule entryRuleSubsectionLevel2
entryRuleSubsectionLevel2 returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSubsectionLevel2Rule()); }
	 iv_ruleSubsectionLevel2=ruleSubsectionLevel2 
	 { $current=$iv_ruleSubsectionLevel2.current; } 
	 EOF 
;

// Rule SubsectionLevel2
ruleSubsectionLevel2 returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='===' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSubsectionLevel2Access().getEqualsSignEqualsSignEqualsSignKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSubsectionLevel2Access().getNameTextParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleText		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSubsectionLevel2Rule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"Text");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='===' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getSubsectionLevel2Access().getEqualsSignEqualsSignEqualsSignKeyword_2());
    }
	otherlv_3='\n' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getSubsectionLevel2Access().getControl000aKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSubsectionLevel2Access().getContentInlineContentParserRuleCall_4_0()); 
	    }
		lv_content_4_0=ruleInlineContent		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSubsectionLevel2Rule());
	        }
       		add(
       			$current, 
       			"content",
        		lv_content_4_0, 
        		"InlineContent");
	        afterParserOrEnumRuleCall();
	    }

)
)*)
;





// Entry rule entryRuleSubsectionLevel3
entryRuleSubsectionLevel3 returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSubsectionLevel3Rule()); }
	 iv_ruleSubsectionLevel3=ruleSubsectionLevel3 
	 { $current=$iv_ruleSubsectionLevel3.current; } 
	 EOF 
;

// Rule SubsectionLevel3
ruleSubsectionLevel3 returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='====' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSubsectionLevel3Access().getEqualsSignEqualsSignEqualsSignEqualsSignKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSubsectionLevel3Access().getNameTextParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleText		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSubsectionLevel3Rule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"Text");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='====' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getSubsectionLevel3Access().getEqualsSignEqualsSignEqualsSignEqualsSignKeyword_2());
    }
	otherlv_3='\n' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getSubsectionLevel3Access().getControl000aKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSubsectionLevel3Access().getContentInlineContentParserRuleCall_4_0()); 
	    }
		lv_content_4_0=ruleInlineContent		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSubsectionLevel3Rule());
	        }
       		add(
       			$current, 
       			"content",
        		lv_content_4_0, 
        		"InlineContent");
	        afterParserOrEnumRuleCall();
	    }

)
)*)
;





// Entry rule entryRuleSubsectionLevel4
entryRuleSubsectionLevel4 returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSubsectionLevel4Rule()); }
	 iv_ruleSubsectionLevel4=ruleSubsectionLevel4 
	 { $current=$iv_ruleSubsectionLevel4.current; } 
	 EOF 
;

// Rule SubsectionLevel4
ruleSubsectionLevel4 returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='=====' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSubsectionLevel4Access().getEqualsSignEqualsSignEqualsSignEqualsSignEqualsSignKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSubsectionLevel4Access().getNameTextParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleText		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSubsectionLevel4Rule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"Text");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='=====' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getSubsectionLevel4Access().getEqualsSignEqualsSignEqualsSignEqualsSignEqualsSignKeyword_2());
    }
	otherlv_3='\n' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getSubsectionLevel4Access().getControl000aKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSubsectionLevel4Access().getContentInlineContentParserRuleCall_4_0()); 
	    }
		lv_content_4_0=ruleInlineContent		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSubsectionLevel4Rule());
	        }
       		add(
       			$current, 
       			"content",
        		lv_content_4_0, 
        		"InlineContent");
	        afterParserOrEnumRuleCall();
	    }

)
)*)
;





// Entry rule entryRuleInlineContent
entryRuleInlineContent returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInlineContentRule()); }
	 iv_ruleInlineContent=ruleInlineContent 
	 { $current=$iv_ruleInlineContent.current; } 
	 EOF 
;

// Rule InlineContent
ruleInlineContent returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getInlineContentAccess().getFormattedContentParserRuleCall_0()); 
    }
    this_FormattedContent_0=ruleFormattedContent
    { 
        $current = $this_FormattedContent_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getInlineContentAccess().getTextParserRuleCall_1()); 
    }
    this_Text_1=ruleText
    { 
        $current = $this_Text_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleFormattedContent
entryRuleFormattedContent returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFormattedContentRule()); }
	 iv_ruleFormattedContent=ruleFormattedContent 
	 { $current=$iv_ruleFormattedContent.current; } 
	 EOF 
;

// Rule FormattedContent
ruleFormattedContent returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getFormattedContentAccess().getItalicContentParserRuleCall_0()); 
    }
    this_ItalicContent_0=ruleItalicContent
    { 
        $current = $this_ItalicContent_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getFormattedContentAccess().getBoldContentParserRuleCall_1()); 
    }
    this_BoldContent_1=ruleBoldContent
    { 
        $current = $this_BoldContent_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getFormattedContentAccess().getBoldItalicContentParserRuleCall_2()); 
    }
    this_BoldItalicContent_2=ruleBoldItalicContent
    { 
        $current = $this_BoldItalicContent_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleItalicContent
entryRuleItalicContent returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getItalicContentRule()); }
	 iv_ruleItalicContent=ruleItalicContent 
	 { $current=$iv_ruleItalicContent.current; } 
	 EOF 
;

// Rule ItalicContent
ruleItalicContent returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='\'\'' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getItalicContentAccess().getApostropheApostropheKeyword_0());
    }

    { 
        newCompositeNode(grammarAccess.getItalicContentAccess().getTextParserRuleCall_1()); 
    }
    this_Text_1=ruleText
    { 
        $current = $this_Text_1.current; 
        afterParserOrEnumRuleCall();
    }
	otherlv_2='\'\'' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getItalicContentAccess().getApostropheApostropheKeyword_2());
    }
)
;





// Entry rule entryRuleBoldContent
entryRuleBoldContent returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBoldContentRule()); }
	 iv_ruleBoldContent=ruleBoldContent 
	 { $current=$iv_ruleBoldContent.current; } 
	 EOF 
;

// Rule BoldContent
ruleBoldContent returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='\'\'\'' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getBoldContentAccess().getApostropheApostropheApostropheKeyword_0());
    }

    { 
        newCompositeNode(grammarAccess.getBoldContentAccess().getTextParserRuleCall_1()); 
    }
    this_Text_1=ruleText
    { 
        $current = $this_Text_1.current; 
        afterParserOrEnumRuleCall();
    }
	otherlv_2='\'\'\'' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getBoldContentAccess().getApostropheApostropheApostropheKeyword_2());
    }
)
;





// Entry rule entryRuleBoldItalicContent
entryRuleBoldItalicContent returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBoldItalicContentRule()); }
	 iv_ruleBoldItalicContent=ruleBoldItalicContent 
	 { $current=$iv_ruleBoldItalicContent.current; } 
	 EOF 
;

// Rule BoldItalicContent
ruleBoldItalicContent returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='\'\'\'\'\'' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getBoldItalicContentAccess().getApostropheApostropheApostropheApostropheApostropheKeyword_0());
    }

    { 
        newCompositeNode(grammarAccess.getBoldItalicContentAccess().getTextParserRuleCall_1()); 
    }
    this_Text_1=ruleText
    { 
        $current = $this_Text_1.current; 
        afterParserOrEnumRuleCall();
    }
	otherlv_2='\'\'\'\'\'' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getBoldItalicContentAccess().getApostropheApostropheApostropheApostropheApostropheKeyword_2());
    }
)
;





// Entry rule entryRuleText
entryRuleText returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTextRule()); }
	 iv_ruleText=ruleText 
	 { $current=$iv_ruleText.current; } 
	 EOF 
;

// Rule Text
ruleText returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getTextAccess().getUnFormattedTextParserRuleCall_0()); 
    }
    this_UnFormattedText_0=ruleUnFormattedText
    { 
        $current = $this_UnFormattedText_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getTextAccess().getHyperlinkParserRuleCall_1()); 
    }
    this_Hyperlink_1=ruleHyperlink
    { 
        $current = $this_Hyperlink_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleUnFormattedText
entryRuleUnFormattedText returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getUnFormattedTextRule()); }
	 iv_ruleUnFormattedText=ruleUnFormattedText 
	 { $current=$iv_ruleUnFormattedText.current; } 
	 EOF 
;

// Rule UnFormattedText
ruleUnFormattedText returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_words_0_0=RULE_WIKITEXT
		{
			newLeafNode(lv_words_0_0, grammarAccess.getUnFormattedTextAccess().getWordsWIKITEXTTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getUnFormattedTextRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"words",
        		lv_words_0_0, 
        		"WIKITEXT");
	    }

)
)(this_WIKITEXT_1=RULE_WIKITEXT
    { 
    newLeafNode(this_WIKITEXT_1, grammarAccess.getUnFormattedTextAccess().getWIKITEXTTerminalRuleCall_1()); 
    }
)*)
;





// Entry rule entryRuleHyperlink
entryRuleHyperlink returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getHyperlinkRule()); }
	 iv_ruleHyperlink=ruleHyperlink 
	 { $current=$iv_ruleHyperlink.current; } 
	 EOF 
;

// Rule Hyperlink
ruleHyperlink returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getHyperlinkAccess().getInternalLinkParserRuleCall_0()); 
    }
    this_InternalLink_0=ruleInternalLink
    { 
        $current = $this_InternalLink_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getHyperlinkAccess().getInternalLinkAlternativeParserRuleCall_1()); 
    }
    this_InternalLinkAlternative_1=ruleInternalLinkAlternative
    { 
        $current = $this_InternalLinkAlternative_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getHyperlinkAccess().getExternalLinkParserRuleCall_2()); 
    }
    this_ExternalLink_2=ruleExternalLink
    { 
        $current = $this_ExternalLink_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getHyperlinkAccess().getExternalLinkAlternativeParserRuleCall_3()); 
    }
    this_ExternalLinkAlternative_3=ruleExternalLinkAlternative
    { 
        $current = $this_ExternalLinkAlternative_3.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleExternalLink
entryRuleExternalLink returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getExternalLinkRule()); }
	 iv_ruleExternalLink=ruleExternalLink 
	 { $current=$iv_ruleExternalLink.current; } 
	 EOF 
;

// Rule ExternalLink
ruleExternalLink returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='[' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getExternalLinkAccess().getLeftSquareBracketKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getExternalLinkAccess().getPageNameUnFormattedTextParserRuleCall_1_0()); 
	    }
		lv_pageName_1_0=ruleUnFormattedText		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExternalLinkRule());
	        }
       		set(
       			$current, 
       			"pageName",
        		lv_pageName_1_0, 
        		"UnFormattedText");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2=']' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getExternalLinkAccess().getRightSquareBracketKeyword_2());
    }
)
;





// Entry rule entryRuleExternalLinkAlternative
entryRuleExternalLinkAlternative returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getExternalLinkAlternativeRule()); }
	 iv_ruleExternalLinkAlternative=ruleExternalLinkAlternative 
	 { $current=$iv_ruleExternalLinkAlternative.current; } 
	 EOF 
;

// Rule ExternalLinkAlternative
ruleExternalLinkAlternative returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='[' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getExternalLinkAlternativeAccess().getLeftSquareBracketKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getExternalLinkAlternativeAccess().getUrlUnFormattedTextParserRuleCall_1_0()); 
	    }
		lv_url_1_0=ruleUnFormattedText		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExternalLinkAlternativeRule());
	        }
       		set(
       			$current, 
       			"url",
        		lv_url_1_0, 
        		"UnFormattedText");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2=' ' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getExternalLinkAlternativeAccess().getSpaceKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getExternalLinkAlternativeAccess().getAlternativeTextUnFormattedTextParserRuleCall_3_0()); 
	    }
		lv_alternativeText_3_0=ruleUnFormattedText		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExternalLinkAlternativeRule());
	        }
       		set(
       			$current, 
       			"alternativeText",
        		lv_alternativeText_3_0, 
        		"UnFormattedText");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4=']' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getExternalLinkAlternativeAccess().getRightSquareBracketKeyword_4());
    }
)
;





// Entry rule entryRuleInternalLink
entryRuleInternalLink returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInternalLinkRule()); }
	 iv_ruleInternalLink=ruleInternalLink 
	 { $current=$iv_ruleInternalLink.current; } 
	 EOF 
;

// Rule InternalLink
ruleInternalLink returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='[[' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getInternalLinkAccess().getLeftSquareBracketLeftSquareBracketKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInternalLinkAccess().getPageNameUnFormattedTextParserRuleCall_1_0()); 
	    }
		lv_pageName_1_0=ruleUnFormattedText		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInternalLinkRule());
	        }
       		set(
       			$current, 
       			"pageName",
        		lv_pageName_1_0, 
        		"UnFormattedText");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2=']]' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getInternalLinkAccess().getRightSquareBracketRightSquareBracketKeyword_2());
    }
)
;





// Entry rule entryRuleInternalLinkAlternative
entryRuleInternalLinkAlternative returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInternalLinkAlternativeRule()); }
	 iv_ruleInternalLinkAlternative=ruleInternalLinkAlternative 
	 { $current=$iv_ruleInternalLinkAlternative.current; } 
	 EOF 
;

// Rule InternalLinkAlternative
ruleInternalLinkAlternative returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='[[' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getInternalLinkAlternativeAccess().getLeftSquareBracketLeftSquareBracketKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInternalLinkAlternativeAccess().getPageNameUnFormattedTextParserRuleCall_1_0()); 
	    }
		lv_pageName_1_0=ruleUnFormattedText		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInternalLinkAlternativeRule());
	        }
       		set(
       			$current, 
       			"pageName",
        		lv_pageName_1_0, 
        		"UnFormattedText");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='|' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getInternalLinkAlternativeAccess().getVerticalLineKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInternalLinkAlternativeAccess().getAlternativeTextUnFormattedTextParserRuleCall_3_0()); 
	    }
		lv_alternativeText_3_0=ruleUnFormattedText		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInternalLinkAlternativeRule());
	        }
       		set(
       			$current, 
       			"alternativeText",
        		lv_alternativeText_3_0, 
        		"UnFormattedText");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4=']]' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getInternalLinkAlternativeAccess().getRightSquareBracketRightSquareBracketKeyword_4());
    }
)
;





RULE_WIKITEXT : '^'? ~(('='|'\''|'['|']'|'\n'))*;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


