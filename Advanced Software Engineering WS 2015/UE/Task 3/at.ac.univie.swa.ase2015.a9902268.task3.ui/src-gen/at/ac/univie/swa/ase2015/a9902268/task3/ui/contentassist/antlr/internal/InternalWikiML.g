/*
 * generated by Xtext
 */
grammar InternalWikiML;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package at.ac.univie.swa.ase2015.a9902268.task3.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package at.ac.univie.swa.ase2015.a9902268.task3.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import at.ac.univie.swa.ase2015.a9902268.task3.services.WikiMLGrammarAccess;

}

@parser::members {
 
 	private WikiMLGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(WikiMLGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRulewikipage
entryRulewikipage 
:
{ before(grammarAccess.getWikipageRule()); }
	 rulewikipage
{ after(grammarAccess.getWikipageRule()); } 
	 EOF 
;

// Rule wikipage
rulewikipage
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getWikipageAccess().getGroup()); }
(rule__Wikipage__Group__0)
{ after(grammarAccess.getWikipageAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAbstractSection
entryRuleAbstractSection 
:
{ before(grammarAccess.getAbstractSectionRule()); }
	 ruleAbstractSection
{ after(grammarAccess.getAbstractSectionRule()); } 
	 EOF 
;

// Rule AbstractSection
ruleAbstractSection
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAbstractSectionAccess().getAlternatives()); }
(rule__AbstractSection__Alternatives)
{ after(grammarAccess.getAbstractSectionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSubsectionLevel1
entryRuleSubsectionLevel1 
:
{ before(grammarAccess.getSubsectionLevel1Rule()); }
	 ruleSubsectionLevel1
{ after(grammarAccess.getSubsectionLevel1Rule()); } 
	 EOF 
;

// Rule SubsectionLevel1
ruleSubsectionLevel1
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSubsectionLevel1Access().getGroup()); }
(rule__SubsectionLevel1__Group__0)
{ after(grammarAccess.getSubsectionLevel1Access().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSubsectionLevel2
entryRuleSubsectionLevel2 
:
{ before(grammarAccess.getSubsectionLevel2Rule()); }
	 ruleSubsectionLevel2
{ after(grammarAccess.getSubsectionLevel2Rule()); } 
	 EOF 
;

// Rule SubsectionLevel2
ruleSubsectionLevel2
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSubsectionLevel2Access().getGroup()); }
(rule__SubsectionLevel2__Group__0)
{ after(grammarAccess.getSubsectionLevel2Access().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSubsectionLevel3
entryRuleSubsectionLevel3 
:
{ before(grammarAccess.getSubsectionLevel3Rule()); }
	 ruleSubsectionLevel3
{ after(grammarAccess.getSubsectionLevel3Rule()); } 
	 EOF 
;

// Rule SubsectionLevel3
ruleSubsectionLevel3
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSubsectionLevel3Access().getGroup()); }
(rule__SubsectionLevel3__Group__0)
{ after(grammarAccess.getSubsectionLevel3Access().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSubsectionLevel4
entryRuleSubsectionLevel4 
:
{ before(grammarAccess.getSubsectionLevel4Rule()); }
	 ruleSubsectionLevel4
{ after(grammarAccess.getSubsectionLevel4Rule()); } 
	 EOF 
;

// Rule SubsectionLevel4
ruleSubsectionLevel4
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSubsectionLevel4Access().getGroup()); }
(rule__SubsectionLevel4__Group__0)
{ after(grammarAccess.getSubsectionLevel4Access().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInlineContent
entryRuleInlineContent 
:
{ before(grammarAccess.getInlineContentRule()); }
	 ruleInlineContent
{ after(grammarAccess.getInlineContentRule()); } 
	 EOF 
;

// Rule InlineContent
ruleInlineContent
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInlineContentAccess().getGroup()); }
(rule__InlineContent__Group__0)
{ after(grammarAccess.getInlineContentAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__AbstractSection__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbstractSectionAccess().getSubsectionLevel1ParserRuleCall_0()); }
	ruleSubsectionLevel1
{ after(grammarAccess.getAbstractSectionAccess().getSubsectionLevel1ParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getAbstractSectionAccess().getSubsectionLevel2ParserRuleCall_1()); }
	ruleSubsectionLevel2
{ after(grammarAccess.getAbstractSectionAccess().getSubsectionLevel2ParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getAbstractSectionAccess().getSubsectionLevel3ParserRuleCall_2()); }
	ruleSubsectionLevel3
{ after(grammarAccess.getAbstractSectionAccess().getSubsectionLevel3ParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getAbstractSectionAccess().getSubsectionLevel4ParserRuleCall_3()); }
	ruleSubsectionLevel4
{ after(grammarAccess.getAbstractSectionAccess().getSubsectionLevel4ParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Wikipage__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Wikipage__Group__0__Impl
	rule__Wikipage__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Wikipage__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWikipageAccess().getTitleKeyword_0()); }

	'title' 

{ after(grammarAccess.getWikipageAccess().getTitleKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Wikipage__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Wikipage__Group__1__Impl
	rule__Wikipage__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Wikipage__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWikipageAccess().getNameAssignment_1()); }
(rule__Wikipage__NameAssignment_1)
{ after(grammarAccess.getWikipageAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Wikipage__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Wikipage__Group__2__Impl
	rule__Wikipage__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Wikipage__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWikipageAccess().getTitleKeyword_2()); }

	'title\n' 

{ after(grammarAccess.getWikipageAccess().getTitleKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Wikipage__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Wikipage__Group__3__Impl
	rule__Wikipage__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Wikipage__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWikipageAccess().getContentAssignment_3()); }
(rule__Wikipage__ContentAssignment_3)?
{ after(grammarAccess.getWikipageAccess().getContentAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Wikipage__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Wikipage__Group__4__Impl
	rule__Wikipage__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Wikipage__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWikipageAccess().getSectionsAssignment_4()); }
(rule__Wikipage__SectionsAssignment_4)
{ after(grammarAccess.getWikipageAccess().getSectionsAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Wikipage__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Wikipage__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Wikipage__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWikipageAccess().getAbstractSectionsAssignment_5()); }
(rule__Wikipage__AbstractSectionsAssignment_5)*
{ after(grammarAccess.getWikipageAccess().getAbstractSectionsAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__SubsectionLevel1__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SubsectionLevel1__Group__0__Impl
	rule__SubsectionLevel1__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SubsectionLevel1__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubsectionLevel1Access().getSection1Keyword_0()); }

	'section1' 

{ after(grammarAccess.getSubsectionLevel1Access().getSection1Keyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SubsectionLevel1__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SubsectionLevel1__Group__1__Impl
	rule__SubsectionLevel1__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SubsectionLevel1__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubsectionLevel1Access().getNameAssignment_1()); }
(rule__SubsectionLevel1__NameAssignment_1)
{ after(grammarAccess.getSubsectionLevel1Access().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SubsectionLevel1__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SubsectionLevel1__Group__2__Impl
	rule__SubsectionLevel1__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SubsectionLevel1__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubsectionLevel1Access().getSection1Keyword_2()); }

	'section1\n' 

{ after(grammarAccess.getSubsectionLevel1Access().getSection1Keyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SubsectionLevel1__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SubsectionLevel1__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SubsectionLevel1__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubsectionLevel1Access().getContentAssignment_3()); }
(rule__SubsectionLevel1__ContentAssignment_3)?
{ after(grammarAccess.getSubsectionLevel1Access().getContentAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__SubsectionLevel2__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SubsectionLevel2__Group__0__Impl
	rule__SubsectionLevel2__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SubsectionLevel2__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubsectionLevel2Access().getSection2Keyword_0()); }

	'section2' 

{ after(grammarAccess.getSubsectionLevel2Access().getSection2Keyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SubsectionLevel2__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SubsectionLevel2__Group__1__Impl
	rule__SubsectionLevel2__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SubsectionLevel2__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubsectionLevel2Access().getNameAssignment_1()); }
(rule__SubsectionLevel2__NameAssignment_1)
{ after(grammarAccess.getSubsectionLevel2Access().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SubsectionLevel2__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SubsectionLevel2__Group__2__Impl
	rule__SubsectionLevel2__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SubsectionLevel2__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubsectionLevel2Access().getSection2Keyword_2()); }

	'section2\n' 

{ after(grammarAccess.getSubsectionLevel2Access().getSection2Keyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SubsectionLevel2__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SubsectionLevel2__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SubsectionLevel2__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubsectionLevel2Access().getContentAssignment_3()); }
(rule__SubsectionLevel2__ContentAssignment_3)?
{ after(grammarAccess.getSubsectionLevel2Access().getContentAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__SubsectionLevel3__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SubsectionLevel3__Group__0__Impl
	rule__SubsectionLevel3__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SubsectionLevel3__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubsectionLevel3Access().getSection3Keyword_0()); }

	'section3' 

{ after(grammarAccess.getSubsectionLevel3Access().getSection3Keyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SubsectionLevel3__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SubsectionLevel3__Group__1__Impl
	rule__SubsectionLevel3__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SubsectionLevel3__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubsectionLevel3Access().getNameAssignment_1()); }
(rule__SubsectionLevel3__NameAssignment_1)
{ after(grammarAccess.getSubsectionLevel3Access().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SubsectionLevel3__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SubsectionLevel3__Group__2__Impl
	rule__SubsectionLevel3__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SubsectionLevel3__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubsectionLevel3Access().getSection3Keyword_2()); }

	'section3\n' 

{ after(grammarAccess.getSubsectionLevel3Access().getSection3Keyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SubsectionLevel3__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SubsectionLevel3__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SubsectionLevel3__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubsectionLevel3Access().getContentAssignment_3()); }
(rule__SubsectionLevel3__ContentAssignment_3)?
{ after(grammarAccess.getSubsectionLevel3Access().getContentAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__SubsectionLevel4__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SubsectionLevel4__Group__0__Impl
	rule__SubsectionLevel4__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SubsectionLevel4__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubsectionLevel4Access().getSection4Keyword_0()); }

	'section4' 

{ after(grammarAccess.getSubsectionLevel4Access().getSection4Keyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SubsectionLevel4__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SubsectionLevel4__Group__1__Impl
	rule__SubsectionLevel4__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SubsectionLevel4__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubsectionLevel4Access().getNameAssignment_1()); }
(rule__SubsectionLevel4__NameAssignment_1)
{ after(grammarAccess.getSubsectionLevel4Access().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SubsectionLevel4__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SubsectionLevel4__Group__2__Impl
	rule__SubsectionLevel4__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SubsectionLevel4__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubsectionLevel4Access().getSection4Keyword_2()); }

	'section4\n' 

{ after(grammarAccess.getSubsectionLevel4Access().getSection4Keyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SubsectionLevel4__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SubsectionLevel4__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SubsectionLevel4__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubsectionLevel4Access().getContentAssignment_3()); }
(rule__SubsectionLevel4__ContentAssignment_3)?
{ after(grammarAccess.getSubsectionLevel4Access().getContentAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__InlineContent__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InlineContent__Group__0__Impl
	rule__InlineContent__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InlineContent__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInlineContentAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
{ after(grammarAccess.getInlineContentAccess().getIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InlineContent__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InlineContent__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InlineContent__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInlineContentAccess().getIDTerminalRuleCall_1()); }
(	RULE_ID)*
{ after(grammarAccess.getInlineContentAccess().getIDTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__Wikipage__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWikipageAccess().getNameInlineContentParserRuleCall_1_0()); }
	ruleInlineContent{ after(grammarAccess.getWikipageAccess().getNameInlineContentParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Wikipage__ContentAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWikipageAccess().getContentInlineContentParserRuleCall_3_0()); }
	ruleInlineContent{ after(grammarAccess.getWikipageAccess().getContentInlineContentParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Wikipage__SectionsAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWikipageAccess().getSectionsAbstractSectionParserRuleCall_4_0()); }
	ruleAbstractSection{ after(grammarAccess.getWikipageAccess().getSectionsAbstractSectionParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Wikipage__AbstractSectionsAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWikipageAccess().getAbstractSectionsAbstractSectionParserRuleCall_5_0()); }
	ruleAbstractSection{ after(grammarAccess.getWikipageAccess().getAbstractSectionsAbstractSectionParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SubsectionLevel1__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubsectionLevel1Access().getNameInlineContentParserRuleCall_1_0()); }
	ruleInlineContent{ after(grammarAccess.getSubsectionLevel1Access().getNameInlineContentParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SubsectionLevel1__ContentAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubsectionLevel1Access().getContentInlineContentParserRuleCall_3_0()); }
	ruleInlineContent{ after(grammarAccess.getSubsectionLevel1Access().getContentInlineContentParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SubsectionLevel2__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubsectionLevel2Access().getNameInlineContentParserRuleCall_1_0()); }
	ruleInlineContent{ after(grammarAccess.getSubsectionLevel2Access().getNameInlineContentParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SubsectionLevel2__ContentAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubsectionLevel2Access().getContentInlineContentParserRuleCall_3_0()); }
	ruleInlineContent{ after(grammarAccess.getSubsectionLevel2Access().getContentInlineContentParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SubsectionLevel3__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubsectionLevel3Access().getNameInlineContentParserRuleCall_1_0()); }
	ruleInlineContent{ after(grammarAccess.getSubsectionLevel3Access().getNameInlineContentParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SubsectionLevel3__ContentAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubsectionLevel3Access().getContentInlineContentParserRuleCall_3_0()); }
	ruleInlineContent{ after(grammarAccess.getSubsectionLevel3Access().getContentInlineContentParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SubsectionLevel4__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubsectionLevel4Access().getNameInlineContentParserRuleCall_1_0()); }
	ruleInlineContent{ after(grammarAccess.getSubsectionLevel4Access().getNameInlineContentParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SubsectionLevel4__ContentAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubsectionLevel4Access().getContentInlineContentParserRuleCall_3_0()); }
	ruleInlineContent{ after(grammarAccess.getSubsectionLevel4Access().getContentInlineContentParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


