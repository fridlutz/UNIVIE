/*
 * generated by Xtext
 */
package at.ac.univie.swa.ase2015.a9902268.task3.ui.contentassist.antlr;

import java.util.Collection;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

import com.google.inject.Inject;

import at.ac.univie.swa.ase2015.a9902268.task3.services.WikiMLGrammarAccess;

public class WikiMLParser extends AbstractContentAssistParser {
	
	@Inject
	private WikiMLGrammarAccess grammarAccess;
	
	private Map<AbstractElement, String> nameMappings;
	
	@Override
	protected at.ac.univie.swa.ase2015.a9902268.task3.ui.contentassist.antlr.internal.InternalWikiMLParser createParser() {
		at.ac.univie.swa.ase2015.a9902268.task3.ui.contentassist.antlr.internal.InternalWikiMLParser result = new at.ac.univie.swa.ase2015.a9902268.task3.ui.contentassist.antlr.internal.InternalWikiMLParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getAbstractSectionAccess().getAlternatives(), "rule__AbstractSection__Alternatives");
					put(grammarAccess.getInlineContentAccess().getAlternatives(), "rule__InlineContent__Alternatives");
					put(grammarAccess.getFormattedContentAccess().getAlternatives(), "rule__FormattedContent__Alternatives");
					put(grammarAccess.getTextAccess().getAlternatives(), "rule__Text__Alternatives");
					put(grammarAccess.getHyperlinkAccess().getAlternatives(), "rule__Hyperlink__Alternatives");
					put(grammarAccess.getWikipageAccess().getGroup(), "rule__Wikipage__Group__0");
					put(grammarAccess.getSubsectionLevel1Access().getGroup(), "rule__SubsectionLevel1__Group__0");
					put(grammarAccess.getSubsectionLevel2Access().getGroup(), "rule__SubsectionLevel2__Group__0");
					put(grammarAccess.getSubsectionLevel3Access().getGroup(), "rule__SubsectionLevel3__Group__0");
					put(grammarAccess.getSubsectionLevel4Access().getGroup(), "rule__SubsectionLevel4__Group__0");
					put(grammarAccess.getItalicContentAccess().getGroup(), "rule__ItalicContent__Group__0");
					put(grammarAccess.getBoldContentAccess().getGroup(), "rule__BoldContent__Group__0");
					put(grammarAccess.getBoldItalicContentAccess().getGroup(), "rule__BoldItalicContent__Group__0");
					put(grammarAccess.getUnFormattedTextAccess().getGroup(), "rule__UnFormattedText__Group__0");
					put(grammarAccess.getExternalLinkAccess().getGroup(), "rule__ExternalLink__Group__0");
					put(grammarAccess.getExternalLinkAlternativeAccess().getGroup(), "rule__ExternalLinkAlternative__Group__0");
					put(grammarAccess.getInternalLinkAccess().getGroup(), "rule__InternalLink__Group__0");
					put(grammarAccess.getInternalLinkAlternativeAccess().getGroup(), "rule__InternalLinkAlternative__Group__0");
					put(grammarAccess.getWikipageAccess().getTitleAssignment_1(), "rule__Wikipage__TitleAssignment_1");
					put(grammarAccess.getWikipageAccess().getContentAssignment_5(), "rule__Wikipage__ContentAssignment_5");
					put(grammarAccess.getWikipageAccess().getSectionsAssignment_6(), "rule__Wikipage__SectionsAssignment_6");
					put(grammarAccess.getWikipageAccess().getSectionsAssignment_7(), "rule__Wikipage__SectionsAssignment_7");
					put(grammarAccess.getSubsectionLevel1Access().getNameAssignment_1(), "rule__SubsectionLevel1__NameAssignment_1");
					put(grammarAccess.getSubsectionLevel1Access().getContentAssignment_4(), "rule__SubsectionLevel1__ContentAssignment_4");
					put(grammarAccess.getSubsectionLevel2Access().getNameAssignment_1(), "rule__SubsectionLevel2__NameAssignment_1");
					put(grammarAccess.getSubsectionLevel2Access().getContentAssignment_4(), "rule__SubsectionLevel2__ContentAssignment_4");
					put(grammarAccess.getSubsectionLevel3Access().getNameAssignment_1(), "rule__SubsectionLevel3__NameAssignment_1");
					put(grammarAccess.getSubsectionLevel3Access().getContentAssignment_4(), "rule__SubsectionLevel3__ContentAssignment_4");
					put(grammarAccess.getSubsectionLevel4Access().getNameAssignment_1(), "rule__SubsectionLevel4__NameAssignment_1");
					put(grammarAccess.getSubsectionLevel4Access().getContentAssignment_4(), "rule__SubsectionLevel4__ContentAssignment_4");
					put(grammarAccess.getUnFormattedTextAccess().getWordsAssignment_0(), "rule__UnFormattedText__WordsAssignment_0");
					put(grammarAccess.getExternalLinkAccess().getPageNameAssignment_1(), "rule__ExternalLink__PageNameAssignment_1");
					put(grammarAccess.getExternalLinkAlternativeAccess().getUrlAssignment_1(), "rule__ExternalLinkAlternative__UrlAssignment_1");
					put(grammarAccess.getExternalLinkAlternativeAccess().getAlternativeTextAssignment_3(), "rule__ExternalLinkAlternative__AlternativeTextAssignment_3");
					put(grammarAccess.getInternalLinkAccess().getPageNameAssignment_1(), "rule__InternalLink__PageNameAssignment_1");
					put(grammarAccess.getInternalLinkAlternativeAccess().getPageNameAssignment_1(), "rule__InternalLinkAlternative__PageNameAssignment_1");
					put(grammarAccess.getInternalLinkAlternativeAccess().getAlternativeTextAssignment_3(), "rule__InternalLinkAlternative__AlternativeTextAssignment_3");
				}
			};
		}
		return nameMappings.get(element);
	}
	
	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			at.ac.univie.swa.ase2015.a9902268.task3.ui.contentassist.antlr.internal.InternalWikiMLParser typedParser = (at.ac.univie.swa.ase2015.a9902268.task3.ui.contentassist.antlr.internal.InternalWikiMLParser) parser;
			typedParser.entryRulewikipage();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}		
	}
	
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}
	
	public WikiMLGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}
	
	public void setGrammarAccess(WikiMLGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
