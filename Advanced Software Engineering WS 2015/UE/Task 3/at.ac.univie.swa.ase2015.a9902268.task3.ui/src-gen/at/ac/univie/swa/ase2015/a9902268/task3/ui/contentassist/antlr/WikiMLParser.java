/*
 * generated by Xtext
 */
package at.ac.univie.swa.ase2015.a9902268.task3.ui.contentassist.antlr;

import java.util.Collection;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

import com.google.inject.Inject;

import at.ac.univie.swa.ase2015.a9902268.task3.services.WikiMLGrammarAccess;

public class WikiMLParser extends AbstractContentAssistParser {
	
	@Inject
	private WikiMLGrammarAccess grammarAccess;
	
	private Map<AbstractElement, String> nameMappings;
	
	@Override
	protected at.ac.univie.swa.ase2015.a9902268.task3.ui.contentassist.antlr.internal.InternalWikiMLParser createParser() {
		at.ac.univie.swa.ase2015.a9902268.task3.ui.contentassist.antlr.internal.InternalWikiMLParser result = new at.ac.univie.swa.ase2015.a9902268.task3.ui.contentassist.antlr.internal.InternalWikiMLParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getParagraphTypesAccess().getAlternatives(), "rule__ParagraphTypes__Alternatives");
					put(grammarAccess.getBlockQuoteAccess().getContentAlternatives_2_0(), "rule__BlockQuote__ContentAlternatives_2_0");
					put(grammarAccess.getUnOrderListItemLevel2Access().getNameAlternatives_1_0(), "rule__UnOrderListItemLevel2__NameAlternatives_1_0");
					put(grammarAccess.getUnOrderListItemLevel2Access().getListAlternatives_2_0(), "rule__UnOrderListItemLevel2__ListAlternatives_2_0");
					put(grammarAccess.getUnOrderListItemLevel1Access().getNameAlternatives_1_0(), "rule__UnOrderListItemLevel1__NameAlternatives_1_0");
					put(grammarAccess.getUnOrderListItemLevel1Access().getListAlternatives_2_0(), "rule__UnOrderListItemLevel1__ListAlternatives_2_0");
					put(grammarAccess.getOrderListItemLevel1Access().getNameAlternatives_1_0(), "rule__OrderListItemLevel1__NameAlternatives_1_0");
					put(grammarAccess.getOrderListItemLevel1Access().getListAlternatives_2_0(), "rule__OrderListItemLevel1__ListAlternatives_2_0");
					put(grammarAccess.getFileAccess().getCaptionAlternatives_5_0(), "rule__File__CaptionAlternatives_5_0");
					put(grammarAccess.getAbstractFormattedInlineContentAccess().getAlternatives(), "rule__AbstractFormattedInlineContent__Alternatives");
					put(grammarAccess.getAbstractUnformattedInlineContentAccess().getAlternatives(), "rule__AbstractUnformattedInlineContent__Alternatives");
					put(grammarAccess.getHyperLinkAccess().getAlternatives(), "rule__HyperLink__Alternatives");
					put(grammarAccess.getInternalAltAccess().getAltTextAlternatives_3_0(), "rule__InternalAlt__AltTextAlternatives_3_0");
					put(grammarAccess.getExternalAltAccess().getAltTextAlternatives_2_0(), "rule__ExternalAlt__AltTextAlternatives_2_0");
					put(grammarAccess.getWikiAccess().getGroup(), "rule__Wiki__Group__0");
					put(grammarAccess.getBlockQuoteAccess().getGroup(), "rule__BlockQuote__Group__0");
					put(grammarAccess.getTemplateAccess().getGroup(), "rule__Template__Group__0");
					put(grammarAccess.getTemplateAccess().getGroup_4(), "rule__Template__Group_4__0");
					put(grammarAccess.getUnOrderListItemLevel2Access().getGroup(), "rule__UnOrderListItemLevel2__Group__0");
					put(grammarAccess.getUnOrderListItemLevel1Access().getGroup(), "rule__UnOrderListItemLevel1__Group__0");
					put(grammarAccess.getOrderListItemLevel1Access().getGroup(), "rule__OrderListItemLevel1__Group__0");
					put(grammarAccess.getFileAccess().getGroup(), "rule__File__Group__0");
					put(grammarAccess.getCategoryAccess().getGroup(), "rule__Category__Group__0");
					put(grammarAccess.getHeading1Access().getGroup(), "rule__Heading1__Group__0");
					put(grammarAccess.getHeading2Access().getGroup(), "rule__Heading2__Group__0");
					put(grammarAccess.getHeading3Access().getGroup(), "rule__Heading3__Group__0");
					put(grammarAccess.getHeading4Access().getGroup(), "rule__Heading4__Group__0");
					put(grammarAccess.getHeading5Access().getGroup(), "rule__Heading5__Group__0");
					put(grammarAccess.getBoldAccess().getGroup(), "rule__Bold__Group__0");
					put(grammarAccess.getItalicAccess().getGroup(), "rule__Italic__Group__0");
					put(grammarAccess.getItalicBoldAccess().getGroup(), "rule__ItalicBold__Group__0");
					put(grammarAccess.getInternalAccess().getGroup(), "rule__Internal__Group__0");
					put(grammarAccess.getInternalAltAccess().getGroup(), "rule__InternalAlt__Group__0");
					put(grammarAccess.getExternalAccess().getGroup(), "rule__External__Group__0");
					put(grammarAccess.getExternalAltAccess().getGroup(), "rule__ExternalAlt__Group__0");
					put(grammarAccess.getNameAccess().getGroup(), "rule__Name__Group__0");
					put(grammarAccess.getWikiAccess().getElementsAssignment_1(), "rule__Wiki__ElementsAssignment_1");
					put(grammarAccess.getBlockQuoteAccess().getContentAssignment_2(), "rule__BlockQuote__ContentAssignment_2");
					put(grammarAccess.getTemplateAccess().getNameAssignment_1(), "rule__Template__NameAssignment_1");
					put(grammarAccess.getTemplateAccess().getContentAssignment_3(), "rule__Template__ContentAssignment_3");
					put(grammarAccess.getTemplateAccess().getContentAssignment_4_1(), "rule__Template__ContentAssignment_4_1");
					put(grammarAccess.getUnOrderListItemLevel2Access().getNameAssignment_1(), "rule__UnOrderListItemLevel2__NameAssignment_1");
					put(grammarAccess.getUnOrderListItemLevel2Access().getListAssignment_2(), "rule__UnOrderListItemLevel2__ListAssignment_2");
					put(grammarAccess.getUnOrderListItemLevel1Access().getNameAssignment_1(), "rule__UnOrderListItemLevel1__NameAssignment_1");
					put(grammarAccess.getUnOrderListItemLevel1Access().getListAssignment_2(), "rule__UnOrderListItemLevel1__ListAssignment_2");
					put(grammarAccess.getOrderListItemLevel1Access().getNameAssignment_1(), "rule__OrderListItemLevel1__NameAssignment_1");
					put(grammarAccess.getOrderListItemLevel1Access().getListAssignment_2(), "rule__OrderListItemLevel1__ListAssignment_2");
					put(grammarAccess.getFileAccess().getNameAssignment_1(), "rule__File__NameAssignment_1");
					put(grammarAccess.getFileAccess().getCaptionAssignment_5(), "rule__File__CaptionAssignment_5");
					put(grammarAccess.getCategoryAccess().getNameAssignment_1(), "rule__Category__NameAssignment_1");
					put(grammarAccess.getTextAccess().getNameAssignment(), "rule__Text__NameAssignment");
					put(grammarAccess.getInternalAccess().getNameAssignment_1(), "rule__Internal__NameAssignment_1");
					put(grammarAccess.getInternalAltAccess().getNameAssignment_1(), "rule__InternalAlt__NameAssignment_1");
					put(grammarAccess.getInternalAltAccess().getAltTextAssignment_3(), "rule__InternalAlt__AltTextAssignment_3");
					put(grammarAccess.getExternalAccess().getNameAssignment_1(), "rule__External__NameAssignment_1");
					put(grammarAccess.getExternalAltAccess().getNameAssignment_1(), "rule__ExternalAlt__NameAssignment_1");
					put(grammarAccess.getExternalAltAccess().getAltTextAssignment_2(), "rule__ExternalAlt__AltTextAssignment_2");
				}
			};
		}
		return nameMappings.get(element);
	}
	
	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			at.ac.univie.swa.ase2015.a9902268.task3.ui.contentassist.antlr.internal.InternalWikiMLParser typedParser = (at.ac.univie.swa.ase2015.a9902268.task3.ui.contentassist.antlr.internal.InternalWikiMLParser) parser;
			typedParser.entryRulewiki();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}		
	}
	
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}
	
	public WikiMLGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}
	
	public void setGrammarAccess(WikiMLGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
