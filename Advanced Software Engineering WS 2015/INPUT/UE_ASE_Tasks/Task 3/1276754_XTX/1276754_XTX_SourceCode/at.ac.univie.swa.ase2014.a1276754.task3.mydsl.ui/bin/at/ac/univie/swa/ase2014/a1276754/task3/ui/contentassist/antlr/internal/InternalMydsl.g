/*
* generated by Xtext
*/
grammar InternalMydsl;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package at.ac.univie.swa.ase2014.a1276754.task3.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package at.ac.univie.swa.ase2014.a1276754.task3.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import at.ac.univie.swa.ase2014.a1276754.task3.services.MydslGrammarAccess;

}

@parser::members {
 
 	private MydslGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(MydslGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleModel
entryRuleModel 
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getModelAccess().getGroup()); }
(rule__Model__Group__0)
{ after(grammarAccess.getModelAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDistributor
entryRuleDistributor 
:
{ before(grammarAccess.getDistributorRule()); }
	 ruleDistributor
{ after(grammarAccess.getDistributorRule()); } 
	 EOF 
;

// Rule Distributor
ruleDistributor
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDistributorAccess().getGroup()); }
(rule__Distributor__Group__0)
{ after(grammarAccess.getDistributorAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAccount_Information
entryRuleAccount_Information 
:
{ before(grammarAccess.getAccount_InformationRule()); }
	 ruleAccount_Information
{ after(grammarAccess.getAccount_InformationRule()); } 
	 EOF 
;

// Rule Account_Information
ruleAccount_Information
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAccount_InformationAccess().getGroup()); }
(rule__Account_Information__Group__0)
{ after(grammarAccess.getAccount_InformationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSong
entryRuleSong 
:
{ before(grammarAccess.getSongRule()); }
	 ruleSong
{ after(grammarAccess.getSongRule()); } 
	 EOF 
;

// Rule Song
ruleSong
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSongAccess().getGroup()); }
(rule__Song__Group__0)
{ after(grammarAccess.getSongAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTime
entryRuleTime 
:
{ before(grammarAccess.getTimeRule()); }
	 ruleTime
{ after(grammarAccess.getTimeRule()); } 
	 EOF 
;

// Rule Time
ruleTime
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTimeAccess().getGroup()); }
(rule__Time__Group__0)
{ after(grammarAccess.getTimeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDouble
entryRuleDouble 
:
{ before(grammarAccess.getDoubleRule()); }
	 ruleDouble
{ after(grammarAccess.getDoubleRule()); } 
	 EOF 
;

// Rule Double
ruleDouble
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDoubleAccess().getGroup()); }
(rule__Double__Group__0)
{ after(grammarAccess.getDoubleAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePlaylist
entryRulePlaylist 
:
{ before(grammarAccess.getPlaylistRule()); }
	 rulePlaylist
{ after(grammarAccess.getPlaylistRule()); } 
	 EOF 
;

// Rule Playlist
rulePlaylist
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPlaylistAccess().getGroup()); }
(rule__Playlist__Group__0)
{ after(grammarAccess.getPlaylistAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




// Rule Genre
ruleGenre
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGenreAccess().getAlternatives()); }
(rule__Genre__Alternatives)
{ after(grammarAccess.getGenreAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Genre__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGenreAccess().getPopEnumLiteralDeclaration_0()); }
(	'POP' 
)
{ after(grammarAccess.getGenreAccess().getPopEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getGenreAccess().getRockEnumLiteralDeclaration_1()); }
(	'ROCK' 
)
{ after(grammarAccess.getGenreAccess().getRockEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getGenreAccess().getHardrockEnumLiteralDeclaration_2()); }
(	'HARDROCK' 
)
{ after(grammarAccess.getGenreAccess().getHardrockEnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getGenreAccess().getClassicEnumLiteralDeclaration_3()); }
(	'CLASSIC' 
)
{ after(grammarAccess.getGenreAccess().getClassicEnumLiteralDeclaration_3()); }
)

    |(
{ before(grammarAccess.getGenreAccess().getFolkEnumLiteralDeclaration_4()); }
(	'FOLK' 
)
{ after(grammarAccess.getGenreAccess().getFolkEnumLiteralDeclaration_4()); }
)

    |(
{ before(grammarAccess.getGenreAccess().getOtherEnumLiteralDeclaration_5()); }
(	'OTHER' 
)
{ after(grammarAccess.getGenreAccess().getOtherEnumLiteralDeclaration_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Model__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__0__Impl
	rule__Model__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getDistributorsKeyword_0()); }

	'Distributors:' 

{ after(grammarAccess.getModelAccess().getDistributorsKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__1__Impl
	rule__Model__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getModelAccess().getDistributorsAssignment_1()); }
(rule__Model__DistributorsAssignment_1)
{ after(grammarAccess.getModelAccess().getDistributorsAssignment_1()); }
)
(
{ before(grammarAccess.getModelAccess().getDistributorsAssignment_1()); }
(rule__Model__DistributorsAssignment_1)*
{ after(grammarAccess.getModelAccess().getDistributorsAssignment_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__2__Impl
	rule__Model__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getLibraryKeyword_2()); }

	'Library:' 

{ after(grammarAccess.getModelAccess().getLibraryKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__3__Impl
	rule__Model__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getModelAccess().getSongsAssignment_3()); }
(rule__Model__SongsAssignment_3)
{ after(grammarAccess.getModelAccess().getSongsAssignment_3()); }
)
(
{ before(grammarAccess.getModelAccess().getSongsAssignment_3()); }
(rule__Model__SongsAssignment_3)*
{ after(grammarAccess.getModelAccess().getSongsAssignment_3()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__4__Impl
	rule__Model__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getPlaylistsKeyword_4()); }

	'Playlists:' 

{ after(grammarAccess.getModelAccess().getPlaylistsKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getPlaylistsAssignment_5()); }
(rule__Model__PlaylistsAssignment_5)*
{ after(grammarAccess.getModelAccess().getPlaylistsAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Distributor__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Distributor__Group__0__Impl
	rule__Distributor__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Distributor__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDistributorAccess().getNameAssignment_0()); }
(rule__Distributor__NameAssignment_0)
{ after(grammarAccess.getDistributorAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Distributor__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Distributor__Group__1__Impl
	rule__Distributor__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Distributor__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDistributorAccess().getAddressKeyword_1()); }

	'Address:' 

{ after(grammarAccess.getDistributorAccess().getAddressKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Distributor__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Distributor__Group__2__Impl
	rule__Distributor__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Distributor__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDistributorAccess().getAdresseAssignment_2()); }
(rule__Distributor__AdresseAssignment_2)
{ after(grammarAccess.getDistributorAccess().getAdresseAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Distributor__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Distributor__Group__3__Impl
	rule__Distributor__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Distributor__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDistributorAccess().getAccountInformationKeyword_3()); }

	'Account Information:' 

{ after(grammarAccess.getDistributorAccess().getAccountInformationKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Distributor__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Distributor__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Distributor__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDistributorAccess().getAcc_infoAssignment_4()); }
(rule__Distributor__Acc_infoAssignment_4)
{ after(grammarAccess.getDistributorAccess().getAcc_infoAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Account_Information__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Account_Information__Group__0__Impl
	rule__Account_Information__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Account_Information__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAccount_InformationAccess().getIBANKeyword_0()); }

	'IBAN:' 

{ after(grammarAccess.getAccount_InformationAccess().getIBANKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Account_Information__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Account_Information__Group__1__Impl
	rule__Account_Information__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Account_Information__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAccount_InformationAccess().getIbanAssignment_1()); }
(rule__Account_Information__IbanAssignment_1)
{ after(grammarAccess.getAccount_InformationAccess().getIbanAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Account_Information__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Account_Information__Group__2__Impl
	rule__Account_Information__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Account_Information__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAccount_InformationAccess().getBICKeyword_2()); }

	'BIC:' 

{ after(grammarAccess.getAccount_InformationAccess().getBICKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Account_Information__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Account_Information__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Account_Information__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAccount_InformationAccess().getBicAssignment_3()); }
(rule__Account_Information__BicAssignment_3)
{ after(grammarAccess.getAccount_InformationAccess().getBicAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Song__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Song__Group__0__Impl
	rule__Song__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Song__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSongAccess().getNameAssignment_0()); }
(rule__Song__NameAssignment_0)
{ after(grammarAccess.getSongAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Song__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Song__Group__1__Impl
	rule__Song__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Song__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSongAccess().getSungByKeyword_1()); }

	'sung by' 

{ after(grammarAccess.getSongAccess().getSungByKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Song__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Song__Group__2__Impl
	rule__Song__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Song__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSongAccess().getArtistAssignment_2()); }
(rule__Song__ArtistAssignment_2)
{ after(grammarAccess.getSongAccess().getArtistAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Song__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Song__Group__3__Impl
	rule__Song__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Song__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSongAccess().getProducedByKeyword_3()); }

	'produced by' 

{ after(grammarAccess.getSongAccess().getProducedByKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Song__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Song__Group__4__Impl
	rule__Song__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Song__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSongAccess().getDistAssignment_4()); }
(rule__Song__DistAssignment_4)
{ after(grammarAccess.getSongAccess().getDistAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Song__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Song__Group__5__Impl
	rule__Song__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Song__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSongAccess().getLengthKeyword_5()); }

	'length:' 

{ after(grammarAccess.getSongAccess().getLengthKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Song__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Song__Group__6__Impl
	rule__Song__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Song__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSongAccess().getLengthAssignment_6()); }
(rule__Song__LengthAssignment_6)
{ after(grammarAccess.getSongAccess().getLengthAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Song__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Song__Group__7__Impl
	rule__Song__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Song__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSongAccess().getGenreKeyword_7()); }

	'genre:' 

{ after(grammarAccess.getSongAccess().getGenreKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Song__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Song__Group__8__Impl
	rule__Song__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Song__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSongAccess().getGenreAssignment_8()); }
(rule__Song__GenreAssignment_8)
{ after(grammarAccess.getSongAccess().getGenreAssignment_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Song__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Song__Group__9__Impl
	rule__Song__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__Song__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSongAccess().getPriceKeyword_9()); }

	'price:' 

{ after(grammarAccess.getSongAccess().getPriceKeyword_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Song__Group__10
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Song__Group__10__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Song__Group__10__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSongAccess().getPriceAssignment_10()); }
(rule__Song__PriceAssignment_10)
{ after(grammarAccess.getSongAccess().getPriceAssignment_10()); }
)

;
finally {
	restoreStackSize(stackSize);
}
























rule__Time__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Time__Group__0__Impl
	rule__Time__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Time__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeAccess().getMinAssignment_0()); }
(rule__Time__MinAssignment_0)
{ after(grammarAccess.getTimeAccess().getMinAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Time__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Time__Group__1__Impl
	rule__Time__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Time__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeAccess().getColonKeyword_1()); }

	':' 

{ after(grammarAccess.getTimeAccess().getColonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Time__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Time__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Time__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeAccess().getSecAssignment_2()); }
(rule__Time__SecAssignment_2)
{ after(grammarAccess.getTimeAccess().getSecAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Double__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Double__Group__0__Impl
	rule__Double__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Double__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoubleAccess().getINTTerminalRuleCall_0()); }
	RULE_INT
{ after(grammarAccess.getDoubleAccess().getINTTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Double__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Double__Group__1__Impl
	rule__Double__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Double__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoubleAccess().getFullStopKeyword_1()); }

	'.' 

{ after(grammarAccess.getDoubleAccess().getFullStopKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Double__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Double__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Double__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoubleAccess().getINTTerminalRuleCall_2()); }
	RULE_INT
{ after(grammarAccess.getDoubleAccess().getINTTerminalRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Playlist__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Playlist__Group__0__Impl
	rule__Playlist__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Playlist__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPlaylistAccess().getNameAssignment_0()); }
(rule__Playlist__NameAssignment_0)
{ after(grammarAccess.getPlaylistAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Playlist__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Playlist__Group__1__Impl
	rule__Playlist__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Playlist__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPlaylistAccess().getConsistsOfKeyword_1()); }

	' consists of' 

{ after(grammarAccess.getPlaylistAccess().getConsistsOfKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Playlist__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Playlist__Group__2__Impl
	rule__Playlist__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Playlist__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPlaylistAccess().getGroup_2()); }
(rule__Playlist__Group_2__0)*
{ after(grammarAccess.getPlaylistAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Playlist__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Playlist__Group__3__Impl
	rule__Playlist__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Playlist__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPlaylistAccess().getSongsAssignment_3()); }
(rule__Playlist__SongsAssignment_3)?
{ after(grammarAccess.getPlaylistAccess().getSongsAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Playlist__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Playlist__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Playlist__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPlaylistAccess().getGroup_4()); }
(rule__Playlist__Group_4__0)*
{ after(grammarAccess.getPlaylistAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Playlist__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Playlist__Group_2__0__Impl
	rule__Playlist__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Playlist__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPlaylistAccess().getSongsAssignment_2_0()); }
(rule__Playlist__SongsAssignment_2_0)
{ after(grammarAccess.getPlaylistAccess().getSongsAssignment_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Playlist__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Playlist__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Playlist__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPlaylistAccess().getCommaKeyword_2_1()); }

	',' 

{ after(grammarAccess.getPlaylistAccess().getCommaKeyword_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Playlist__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Playlist__Group_4__0__Impl
	rule__Playlist__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Playlist__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPlaylistAccess().getPlaylistKeyword_4_0()); }

	'Playlist' 

{ after(grammarAccess.getPlaylistAccess().getPlaylistKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Playlist__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Playlist__Group_4__1__Impl
	rule__Playlist__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Playlist__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPlaylistAccess().getInclAssignment_4_1()); }
(rule__Playlist__InclAssignment_4_1)
{ after(grammarAccess.getPlaylistAccess().getInclAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Playlist__Group_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Playlist__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Playlist__Group_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPlaylistAccess().getGroup_4_2()); }
(rule__Playlist__Group_4_2__0)?
{ after(grammarAccess.getPlaylistAccess().getGroup_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Playlist__Group_4_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Playlist__Group_4_2__0__Impl
	rule__Playlist__Group_4_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Playlist__Group_4_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPlaylistAccess().getWithoutKeyword_4_2_0()); }

	'without' 

{ after(grammarAccess.getPlaylistAccess().getWithoutKeyword_4_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Playlist__Group_4_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Playlist__Group_4_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Playlist__Group_4_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPlaylistAccess().getExclAssignment_4_2_1()); }
(rule__Playlist__ExclAssignment_4_2_1)
{ after(grammarAccess.getPlaylistAccess().getExclAssignment_4_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__Model__DistributorsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getDistributorsDistributorParserRuleCall_1_0()); }
	ruleDistributor{ after(grammarAccess.getModelAccess().getDistributorsDistributorParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Model__SongsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getSongsSongParserRuleCall_3_0()); }
	ruleSong{ after(grammarAccess.getModelAccess().getSongsSongParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Model__PlaylistsAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getPlaylistsPlaylistParserRuleCall_5_0()); }
	rulePlaylist{ after(grammarAccess.getModelAccess().getPlaylistsPlaylistParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Distributor__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDistributorAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getDistributorAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Distributor__AdresseAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDistributorAccess().getAdresseSTRINGTerminalRuleCall_2_0()); }
	RULE_STRING{ after(grammarAccess.getDistributorAccess().getAdresseSTRINGTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Distributor__Acc_infoAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDistributorAccess().getAcc_infoAccount_InformationParserRuleCall_4_0()); }
	ruleAccount_Information{ after(grammarAccess.getDistributorAccess().getAcc_infoAccount_InformationParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Account_Information__IbanAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAccount_InformationAccess().getIbanSTRINGTerminalRuleCall_1_0()); }
	RULE_STRING{ after(grammarAccess.getAccount_InformationAccess().getIbanSTRINGTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Account_Information__BicAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAccount_InformationAccess().getBicSTRINGTerminalRuleCall_3_0()); }
	RULE_STRING{ after(grammarAccess.getAccount_InformationAccess().getBicSTRINGTerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Song__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSongAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getSongAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Song__ArtistAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSongAccess().getArtistSTRINGTerminalRuleCall_2_0()); }
	RULE_STRING{ after(grammarAccess.getSongAccess().getArtistSTRINGTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Song__DistAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSongAccess().getDistDistributorCrossReference_4_0()); }
(
{ before(grammarAccess.getSongAccess().getDistDistributorIDTerminalRuleCall_4_0_1()); }
	RULE_ID{ after(grammarAccess.getSongAccess().getDistDistributorIDTerminalRuleCall_4_0_1()); }
)
{ after(grammarAccess.getSongAccess().getDistDistributorCrossReference_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Song__LengthAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSongAccess().getLengthTimeParserRuleCall_6_0()); }
	ruleTime{ after(grammarAccess.getSongAccess().getLengthTimeParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Song__GenreAssignment_8
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSongAccess().getGenreGenreEnumRuleCall_8_0()); }
	ruleGenre{ after(grammarAccess.getSongAccess().getGenreGenreEnumRuleCall_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Song__PriceAssignment_10
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSongAccess().getPriceDoubleParserRuleCall_10_0()); }
	ruleDouble{ after(grammarAccess.getSongAccess().getPriceDoubleParserRuleCall_10_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Time__MinAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeAccess().getMinINTTerminalRuleCall_0_0()); }
	RULE_INT{ after(grammarAccess.getTimeAccess().getMinINTTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Time__SecAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeAccess().getSecINTTerminalRuleCall_2_0()); }
	RULE_INT{ after(grammarAccess.getTimeAccess().getSecINTTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Playlist__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPlaylistAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getPlaylistAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Playlist__SongsAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPlaylistAccess().getSongsSongCrossReference_2_0_0()); }
(
{ before(grammarAccess.getPlaylistAccess().getSongsSongIDTerminalRuleCall_2_0_0_1()); }
	RULE_ID{ after(grammarAccess.getPlaylistAccess().getSongsSongIDTerminalRuleCall_2_0_0_1()); }
)
{ after(grammarAccess.getPlaylistAccess().getSongsSongCrossReference_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Playlist__SongsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPlaylistAccess().getSongsSongCrossReference_3_0()); }
(
{ before(grammarAccess.getPlaylistAccess().getSongsSongIDTerminalRuleCall_3_0_1()); }
	RULE_ID{ after(grammarAccess.getPlaylistAccess().getSongsSongIDTerminalRuleCall_3_0_1()); }
)
{ after(grammarAccess.getPlaylistAccess().getSongsSongCrossReference_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Playlist__InclAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPlaylistAccess().getInclPlaylistCrossReference_4_1_0()); }
(
{ before(grammarAccess.getPlaylistAccess().getInclPlaylistIDTerminalRuleCall_4_1_0_1()); }
	RULE_ID{ after(grammarAccess.getPlaylistAccess().getInclPlaylistIDTerminalRuleCall_4_1_0_1()); }
)
{ after(grammarAccess.getPlaylistAccess().getInclPlaylistCrossReference_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Playlist__ExclAssignment_4_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPlaylistAccess().getExclSongCrossReference_4_2_1_0()); }
(
{ before(grammarAccess.getPlaylistAccess().getExclSongIDTerminalRuleCall_4_2_1_0_1()); }
	RULE_ID{ after(grammarAccess.getPlaylistAccess().getExclSongIDTerminalRuleCall_4_2_1_0_1()); }
)
{ after(grammarAccess.getPlaylistAccess().getExclSongCrossReference_4_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


